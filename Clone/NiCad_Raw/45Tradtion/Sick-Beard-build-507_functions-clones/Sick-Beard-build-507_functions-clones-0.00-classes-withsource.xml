<clones>
<systeminfo processor="nicad6" system="Sick-Beard-build-507" granularity="functions" threshold="0%" minlines="10" maxlines="2500"/>
<cloneinfo npcs="4823" npairs="6"/>
<runinfo ncompares="45651" cputime="79771"/>
<classinfo nclasses="4"/>

<class classid="1" nclones="2" nlines="12" similarity="100">
<source file="systems/Sick-Beard-build-507/lib/hachoir_parser/audio/8svx.py" startline="80" endline="92" pcid="2029">
    def createFields(self):
        yield String(self, "type", 4, "Signature (FORM)", charset="ASCII")
        yield filesizeHandler(UInt32(self, "size"))
        size = self["size"].value
        if size:
            if self._parser:
                for field in self._parser(self):
                    yield field
                if size % 2:
                    yield NullBytes(self, "padding", 1)
            else:
                yield RawBytes(self, "data", size)

</source>
<source file="systems/Sick-Beard-build-507/lib/hachoir_parser/audio/aiff.py" startline="80" endline="92" pcid="2085">
    def createFields(self):
        yield String(self, "type", 4, "Signature (FORM)", charset="ASCII")
        yield filesizeHandler(UInt32(self, "size"))
        size = self["size"].value
        if size:
            if self._parser:
                for field in self._parser(self):
                    yield field
                if size % 2:
                    yield NullBytes(self, "padding", 1)
            else:
                yield RawBytes(self, "data", size)

</source>
</class>

<class classid="2" nclones="2" nlines="11" similarity="100">
<source file="systems/Sick-Beard-build-507/cherrypy/wsgiserver/__init__.py" startline="281" endline="293" pcid="3252">
    def readlines(self, sizehint=0):
        # Shamelessly stolen from StringIO
        total = 0
        lines = []
        line = self.readline(sizehint)
        while line:
            lines.append(line)
            total += len(line)
            if 0 < sizehint <= total:
                break
            line = self.readline(sizehint)
        return lines
    
</source>
<source file="systems/Sick-Beard-build-507/cherrypy/wsgiserver/__init__.py" startline="411" endline="423" pcid="3260">
    def readlines(self, sizehint=0):
        # Shamelessly stolen from StringIO
        total = 0
        lines = []
        line = self.readline(sizehint)
        while line:
            lines.append(line)
            total += len(line)
            if 0 < sizehint <= total:
                break
            line = self.readline(sizehint)
        return lines
    
</source>
</class>

<class classid="3" nclones="3" nlines="10" similarity="100">
<source file="systems/Sick-Beard-build-507/sickbeard/searchBacklog.py" startline="79" endline="89" pcid="3817">
        def titler(x):
            if not x:
                return x
            if not x.lower().startswith('a to ') and x.lower().startswith('a '):
                    x = x[2:]
            elif x.lower().startswith('an '):
                    x = x[3:]
            elif x.lower().startswith('the '):
                    x = x[4:]
            return x
        # sort shows the same way we show them, makes it easier to follow along
</source>
<source file="systems/Sick-Beard-build-507/sickbeard/webserve.py" startline="2264" endline="2273" pcid="4108">
        def titler(x):
            if not x:
                return x
            if not x.lower().startswith('a to ') and x.lower().startswith('a '):
                    x = x[2:]
            elif x.lower().startswith('an '):
                    x = x[3:]
            elif x.lower().startswith('the '):
                    x = x[4:]
            return x
</source>
<source file="systems/Sick-Beard-build-507/sickbeard/webapi.py" startline="136" endline="147" pcid="4505">
        def titler(x):
            if not x:
                return x
            if not x.lower().startswith('a to ') and x.lower().startswith('a '):
                    x = x[2:]
            elif x.lower().startswith('an '):
                    x = x[3:]
            elif x.lower().startswith('the '):
                    x = x[4:]
            return x

        # enforce a 100 show limit to ensure performance
</source>
</class>

<class classid="4" nclones="2" nlines="20" similarity="100">
<source file="systems/Sick-Beard-build-507/sickbeard/metadata/wdtv.py" startline="133" endline="168" pcid="4249">
    def get_season_poster_path(self, show_obj, season):
        """
        Season thumbs for WDTV go in Show Dir/Season X/folder.jpg

        If no season folder exists, None is returned
        """

        dir_list = [x for x in ek.ek(os.listdir, show_obj.location) if ek.ek(os.path.isdir, ek.ek(os.path.join, show_obj.location, x))]

        season_dir_regex = '^Season\s+(\d+)$'

        season_dir = None

        for cur_dir in dir_list:
            if season == 0 and cur_dir == "Specials":
                season_dir = cur_dir
                break

            match = re.match(season_dir_regex, cur_dir, re.I)
            if not match:
                continue

            cur_season = int(match.group(1))

            if cur_season == season:
                season_dir = cur_dir
                break

        if not season_dir:
            logger.log(u"Unable to find a season dir for season " + str(season), logger.DEBUG)
            return None

        logger.log(u"Using " + str(season_dir) + "/folder.jpg as season dir for season " + str(season), logger.DEBUG)

        return ek.ek(os.path.join, show_obj.location, season_dir, 'folder.jpg')

</source>
<source file="systems/Sick-Beard-build-507/sickbeard/metadata/mediabrowser.py" startline="143" endline="181" pcid="4313">
    def get_season_poster_path(self, show_obj, season):
        """
        Season thumbs for MediaBrowser go in Show Dir/Season X/folder.jpg

        If no season folder exists, None is returned
        """

        dir_list = [x for x in ek.ek(os.listdir, show_obj.location) if ek.ek(os.path.isdir, ek.ek(os.path.join, show_obj.location, x))]

        season_dir_regex = '^Season\s+(\d+)$'

        season_dir = None

        for cur_dir in dir_list:
            # MediaBrowser 1.x only supports 'Specials'
            # MediaBrowser 2.x looks to only support 'Season 0'
            # MediaBrowser 3.x looks to mimic XBMC/Plex support
            if season == 0 and cur_dir == "Specials":
                season_dir = cur_dir
                break

            match = re.match(season_dir_regex, cur_dir, re.I)
            if not match:
                continue

            cur_season = int(match.group(1))

            if cur_season == season:
                season_dir = cur_dir
                break

        if not season_dir:
            logger.log(u"Unable to find a season dir for season " + str(season), logger.DEBUG)
            return None

        logger.log(u"Using " + str(season_dir) + "/folder.jpg as season dir for season " + str(season), logger.DEBUG)

        return ek.ek(os.path.join, show_obj.location, season_dir, 'folder.jpg')

</source>
</class>

</clones>
