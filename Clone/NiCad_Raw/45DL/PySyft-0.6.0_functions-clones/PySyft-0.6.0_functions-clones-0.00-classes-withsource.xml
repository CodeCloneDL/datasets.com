<clones>
<systeminfo processor="nicad6" system="PySyft-0.6.0" granularity="functions" threshold="0%" minlines="10" maxlines="2500"/>
<cloneinfo npcs="1747" npairs="36"/>
<runinfo ncompares="8614" cputime="50375"/>
<classinfo nclasses="1"/>

<class classid="1" nclones="9" nlines="10" similarity="100">
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/object_request/object_request_messages.py" startline="207" endline="217" pcid="576">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/object_transfer/object_transfer_messages.py" startline="106" endline="116" pcid="839">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/tensor_manager/tensor_manager_messages.py" startline="124" endline="134" pcid="648">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/tensor_manager/tensor_manager_messages.py" startline="410" endline="420" pcid="664">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/object_transfer/object_transfer_messages.py" startline="246" endline="256" pcid="847">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/network_search/network_search_messages.py" startline="100" endline="110" pcid="737">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/tensor_manager/tensor_manager_messages.py" startline="267" endline="277" pcid="656">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/tensor_manager/tensor_manager_messages.py" startline="553" endline="563" pcid="672">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
<source file="systems/PySyft-0.6.0/packages/syft/src/syft/core/node/common/node_service/tensor_manager/tensor_manager_messages.py" startline="696" endline="706" pcid="680">
    def __init__(
        self,
        address: Address,
        status_code: int,
        content: Dict,
        msg_id: Optional[UID] = None,
    ):
        super().__init__(address=address, msg_id=msg_id)
        self.status_code = status_code
        self.content = content

</source>
</class>

</clones>
