<clones>
<systeminfo processor="nicad6" system="DeepLabCut-2.2.0.6" granularity="functions" threshold="0%" minlines="10" maxlines="2500"/>
<cloneinfo npcs="662" npairs="4"/>
<runinfo ncompares="1507" cputime="46448"/>
<classinfo nclasses="4"/>

<class classid="1" nclones="2" nlines="11" similarity="100">
<source file="systems/DeepLabCut-2.2.0.6/deeplabcut/gui/evaluate_network.py" startline="204" endline="215" pcid="362">
    def chooseOption(self, event):
        if self.bodypart_choice.GetStringSelection() == "No":
            self.bodyparts_to_compare.Show()
            self.getbp(event)
            self.SetSizer(self.sizer)
            self.sizer.Fit(self)
        if self.bodypart_choice.GetStringSelection() == "Yes":
            self.bodyparts_to_compare.Hide()
            self.SetSizer(self.sizer)
            self.sizer.Fit(self)
            self.bodyparts = "all"

</source>
<source file="systems/DeepLabCut-2.2.0.6/deeplabcut/gui/create_videos.py" startline="280" endline="291" pcid="527">
    def chooseOption(self, event):
        if self.bodypart_choice.GetStringSelection() == "No":
            self.bodyparts_to_compare.Show()
            self.getbp(event)
            self.SetSizer(self.sizer)
            self.sizer.Fit(self)  # this sets location.
        if self.bodypart_choice.GetStringSelection() == "Yes":
            self.bodyparts_to_compare.Hide()
            self.SetSizer(self.sizer)
            self.sizer.Fit(self)
            self.bodyparts = "all"

</source>
</class>

<class classid="2" nclones="2" nlines="12" similarity="100">
<source file="systems/DeepLabCut-2.2.0.6/deeplabcut/gui/extract_outlier_frames.py" startline="214" endline="226" pcid="390">
    def merge_dataset(self, event):
        dlg = wx.MessageDialog(
            None,
            "1. Make sure that you have refined all the labels before merging the dataset.\n\n2. If you merge the dataset, you need to re-create the training dataset before you start the training.\n\n3. Are you ready to merge the dataset?",
            "Warning",
            wx.YES_NO | wx.ICON_WARNING,
        )
        result = dlg.ShowModal()
        if result == wx.ID_YES:
            notebook = self.GetParent()
            notebook.SetSelection(4)
            deeplabcut.merge_datasets(self.config, forceiterate=None)

</source>
<source file="systems/DeepLabCut-2.2.0.6/deeplabcut/gui/refine_labels.py" startline="160" endline="172" pcid="590">
    def merge_dataset(self, event):
        dlg = wx.MessageDialog(
            None,
            "1. Make sure that you have refined all the labels before merging the dataset.\n\n2. If you merge the dataset, you need to re-create the training dataset before you start the training.\n\n3. Are you ready to merge the dataset?",
            "Warning",
            wx.YES_NO | wx.ICON_WARNING,
        )
        result = dlg.ShowModal()
        if result == wx.ID_YES:
            notebook = self.GetParent()
            notebook.SetSelection(4)
            deeplabcut.merge_datasets(self.config, forceiterate=None)

</source>
</class>

<class classid="3" nclones="2" nlines="15" similarity="100">
<source file="systems/DeepLabCut-2.2.0.6/deeplabcut/gui/outlier_frame_extraction_toolbox.py" startline="295" endline="313" pcid="408">
    def activate_frame_range(self, event):
        """
        Activates the frame range boxes
        """
        self.checkSlider = event.GetEventObject()
        if self.checkSlider.GetValue():
            self.extract_range_frame = True
            self.startFrame.Enable(True)
            self.startFrame.SetValue(self.slider.GetValue())
            self.endFrame.Enable(True)
            self.updateFrame.Enable(True)
            self.grab.Enable(False)
        else:
            self.extract_range_frame = False
            self.startFrame.Enable(False)
            self.endFrame.Enable(False)
            self.updateFrame.Enable(False)
            self.grab.Enable(True)

</source>
<source file="systems/DeepLabCut-2.2.0.6/deeplabcut/gui/frame_extraction_toolbox.py" startline="195" endline="213" pcid="507">
    def activate_frame_range(self, event):
        """
        Activates the frame range boxes
        """
        self.checkSlider = event.GetEventObject()
        if self.checkSlider.GetValue():
            self.extract_range_frame = True
            self.startFrame.Enable(True)
            self.startFrame.SetValue(self.slider.GetValue())
            self.endFrame.Enable(True)
            self.updateFrame.Enable(True)
            self.grab.Enable(False)
        else:
            self.extract_range_frame = False
            self.startFrame.Enable(False)
            self.endFrame.Enable(False)
            self.updateFrame.Enable(False)
            self.grab.Enable(True)

</source>
</class>

<class classid="4" nclones="2" nlines="11" similarity="100">
<source file="systems/DeepLabCut-2.2.0.6/deeplabcut/gui/refinement.py" startline="660" endline="676" pcid="431">
    def quitButton(self, event):
        """
        Quits the GUI
        """
        self.statusbar.SetStatusText("")
        dlg = wx.MessageDialog(
            None, "Are you sure?", "Quit!", wx.YES_NO | wx.ICON_WARNING
        )
        result = dlg.ShowModal()
        if result == wx.ID_YES:
            print(
                "Closing... The refined labels are stored in a subdirectory under labeled-data. Use the function 'merge_datasets' to augment the training dataset, and then re-train a network using create_training_dataset followed by train_network!"
            )
            self.Destroy()
        else:
            self.save.Enable(True)

</source>
<source file="systems/DeepLabCut-2.2.0.6/deeplabcut/gui/multiple_individuals_refinement_toolbox.py" startline="727" endline="743" pcid="484">
    def quitButton(self, event):
        """
        Quits the GUI
        """
        self.statusbar.SetStatusText("")
        dlg = wx.MessageDialog(
            None, "Are you sure?", "Quit!", wx.YES_NO | wx.ICON_WARNING
        )
        result = dlg.ShowModal()
        if result == wx.ID_YES:
            print(
                "Closing... The refined labels are stored in a subdirectory under labeled-data. Use the function 'merge_datasets' to augment the training dataset, and then re-train a network using create_training_dataset followed by train_network!"
            )
            self.Destroy()
        else:
            self.save.Enable(True)

</source>
</class>

</clones>
