<clonepair1>
<source file="systems/clearml-1.1.6/examples/frameworks/pytorch/pytorch_mnist.py" startline="76" endline="134" pcid="13320"></source>
def main():
    # Connecting ClearML with the current process,
    # from here on everything is logged automatically
    task = Task.init(project_name='examples', task_name='pytorch mnist train')

    # Training settings
    parser = argparse.ArgumentParser(description='PyTorch MNIST Example')
    parser.add_argument('--batch-size', type=int, default=64, metavar='N',
                        help='input batch size for training (default: 64)')
    parser.add_argument('--test-batch-size', type=int, default=1000, metavar='N',
                        help='input batch size for testing (default: 1000)')
    parser.add_argument('--epochs', type=int, default=10, metavar='N',
                        help='number of epochs to train (default: 10)')
    parser.add_argument('--lr', type=float, default=0.01, metavar='LR',
                        help='learning rate (default: 0.01)')
    parser.add_argument('--momentum', type=float, default=0.5, metavar='M',
                        help='SGD momentum (default: 0.5)')
    parser.add_argument('--no-cuda', action='store_true', default=False,
                        help='disables CUDA training')
    parser.add_argument('--seed', type=int, default=1, metavar='S',
                        help='random seed (default: 1)')
    parser.add_argument('--log-interval', type=int, default=10, metavar='N',
                        help='how many batches to wait before logging training status')

    parser.add_argument('--save-model', action='store_true', default=True,
                        help='For Saving the current Model')
    args = parser.parse_args()
    use_cuda = not args.no_cuda and torch.cuda.is_available()

    torch.manual_seed(args.seed)

    device = torch.device("cuda" if use_cuda else "cpu")

    kwargs = {'num_workers': 4, 'pin_memory': True} if use_cuda else {}
    train_loader = torch.utils.data.DataLoader(
        datasets.MNIST(os.path.join('..', 'data'), train=True, download=True,
                       transform=transforms.Compose([
                           transforms.ToTensor(),
                           transforms.Normalize((0.1307,), (0.3081,))
                       ])),
        batch_size=args.batch_size, shuffle=True, **kwargs)
    test_loader = torch.utils.data.DataLoader(
        datasets.MNIST(os.path.join('..', 'data'), train=False, transform=transforms.Compose([
            transforms.ToTensor(),
            transforms.Normalize((0.1307,), (0.3081,))
        ])),
        batch_size=args.test_batch_size, shuffle=True, **kwargs)

    model = Net().to(device)
    optimizer = optim.SGD(model.parameters(), lr=args.lr, momentum=args.momentum)

    for epoch in range(1, args.epochs + 1):
        train(args, model, device, train_loader, optimizer, epoch)
        test(args, model, device, test_loader, epoch)

    if (args.save_model):
        torch.save(model.state_dict(), os.path.join(gettempdir(), "mnist_cnn.pt"))


</clonepair1>

<clonepair1>
<source file="systems/clearml-1.1.6/examples/advanced/execute_remotely_example.py" startline="78" endline="133" pcid="13426"></source>
def main():
    # Connecting ClearML with the current process,
    # from here on everything is logged automatically
    task = Task.init(project_name='examples', task_name='remote_execution pytorch mnist train')
    # Training settings
    parser = argparse.ArgumentParser(description='PyTorch MNIST Example')
    parser.add_argument('--batch-size', type=int, default=64, metavar='N',
                        help='input batch size for training (default: 64)')
    parser.add_argument('--test-batch-size', type=int, default=1000, metavar='N',
                        help='input batch size for testing (default: 1000)')
    parser.add_argument('--epochs', type=int, default=10, metavar='N',
                        help='number of epochs to train (default: 10)')
    parser.add_argument('--lr', type=float, default=0.01, metavar='LR',
                        help='learning rate (default: 0.01)')
    parser.add_argument('--momentum', type=float, default=0.5, metavar='M',
                        help='SGD momentum (default: 0.5)')
    parser.add_argument('--no-cuda', action='store_true', default=False,
                        help='disables CUDA training')
    parser.add_argument('--seed', type=int, default=1, metavar='S',
                        help='random seed (default: 1)')
    parser.add_argument('--log-interval', type=int, default=10, metavar='N',
                        help='how many batches to wait before logging training status')
    parser.add_argument('--save-model', action='store_true', default=True,
                        help='For Saving the current Model')
    args = parser.parse_args()
    use_cuda = not args.no_cuda and torch.cuda.is_available()
    torch.manual_seed(args.seed)
    device = torch.device("cuda" if use_cuda else "cpu")
    kwargs = {'num_workers': 4, 'pin_memory': True} if use_cuda else {}
    train_loader = torch.utils.data.DataLoader(
        datasets.MNIST(os.path.join('..', 'data'), train=True, download=True,
                       transform=transforms.Compose([
                           transforms.ToTensor(),
                           transforms.Normalize((0.1307,), (0.3081,))
                       ])),
        batch_size=args.batch_size, shuffle=True, **kwargs)
    test_loader = torch.utils.data.DataLoader(
        datasets.MNIST(os.path.join('..', 'data'), train=False, transform=transforms.Compose([
            transforms.ToTensor(),
            transforms.Normalize((0.1307,), (0.3081,))
        ])),
        batch_size=args.test_batch_size, shuffle=True, **kwargs)
    model = Net().to(device)
    optimizer = optim.SGD(model.parameters(), lr=args.lr, momentum=args.momentum)

    for epoch in range(1, args.epochs + 1):
        if epoch > 1:
            # We run training for 1 epoch to make sure nothing crashes then local execution will be terminated.
            # Execution will switch to remote execution by the agent listening to specified queue
            task.execute_remotely(queue_name="default")
        train(args, model, device, train_loader, optimizer, epoch)
        test(args, model, device, test_loader, epoch)
    if (args.save_model):
        torch.save(model.state_dict(), os.path.join(gettempdir(), "mnist_cnn.pt"))


</clonepair1>
<clonepair2>
<source file="systems/clearml-1.1.6/examples/frameworks/pytorch/pytorch_tensorboard.py" startline="82" endline="137" pcid="13300"></source>
def main():
    # Training settings
    parser = argparse.ArgumentParser(description='PyTorch MNIST Example')
    parser.add_argument('--batch-size', type=int, default=64, metavar='N',
                        help='input batch size for training (default: 64)')
    parser.add_argument('--test-batch-size', type=int, default=1000, metavar='N',
                        help='input batch size for testing (default: 1000)')
    parser.add_argument('--epochs', type=int, default=10, metavar='N',
                        help='number of epochs to train (default: 10)')
    parser.add_argument('--lr', type=float, default=0.01, metavar='LR',
                        help='learning rate (default: 0.01)')
    parser.add_argument('--momentum', type=float, default=0.5, metavar='M',
                        help='SGD momentum (default: 0.5)')
    parser.add_argument('--no-cuda', action='store_true', default=False,
                        help='disables CUDA training')
    parser.add_argument('--seed', type=int, default=1, metavar='S',
                        help='random seed (default: 1)')
    parser.add_argument('--log-interval', type=int, default=10, metavar='N',
                        help='how many batches to wait before logging training status')
    args = parser.parse_args()

    # Connecting ClearML with the current process,
    # from here on everything is logged automatically
    task = Task.init(project_name='examples', task_name='pytorch with tensorboard')  # noqa: F841

    writer = SummaryWriter('runs')
    writer.add_text('TEXT', 'This is some text', 0)
    args.cuda = not args.no_cuda and torch.cuda.is_available()

    torch.manual_seed(args.seed)
    if args.cuda:
        torch.cuda.manual_seed(args.seed)

    kwargs = {'num_workers': 4, 'pin_memory': True} if args.cuda else {}
    train_loader = torch.utils.data.DataLoader(datasets.MNIST('../data', train=True, download=True,
                                                              transform=transforms.Compose([
                                                                  transforms.ToTensor(),
                                                                  transforms.Normalize((0.1307,), (0.3081,))])),
                                               batch_size=args.batch_size, shuffle=True, **kwargs)
    test_loader = torch.utils.data.DataLoader(datasets.MNIST('../data', train=False,
                                                             transform=transforms.Compose([
                                                                 transforms.ToTensor(),
                                                                 transforms.Normalize((0.1307,), (0.3081,))])),
                                              batch_size=args.test_batch_size, shuffle=True, **kwargs)

    model = Net()
    if args.cuda:
        model.cuda()
    optimizer = optim.SGD(model.parameters(), lr=args.lr, momentum=args.momentum)

    for epoch in range(1, args.epochs + 1):
        train(model, epoch, train_loader, args, optimizer, writer)
        torch.save(model, os.path.join(gettempdir(), 'model{}'.format(epoch)))
    test(model, test_loader, args, optimizer, writer)


</clonepair2>

<clonepair2>
<source file="systems/clearml-1.1.6/examples/frameworks/tensorboardx/pytorch_tensorboardX.py" startline="81" endline="136" pcid="13329"></source>
def main():
    # Training settings
    parser = argparse.ArgumentParser(description='PyTorch MNIST Example')
    parser.add_argument('--batch-size', type=int, default=64, metavar='N',
                        help='input batch size for training (default: 64)')
    parser.add_argument('--test-batch-size', type=int, default=1000, metavar='N',
                        help='input batch size for testing (default: 1000)')
    parser.add_argument('--epochs', type=int, default=2, metavar='N',
                        help='number of epochs to train (default: 10)')
    parser.add_argument('--lr', type=float, default=0.01, metavar='LR',
                        help='learning rate (default: 0.01)')
    parser.add_argument('--momentum', type=float, default=0.5, metavar='M',
                        help='SGD momentum (default: 0.5)')
    parser.add_argument('--no-cuda', action='store_true', default=False,
                        help='disables CUDA training')
    parser.add_argument('--seed', type=int, default=1, metavar='S',
                        help='random seed (default: 1)')
    parser.add_argument('--log-interval', type=int, default=10, metavar='N',
                        help='how many batches to wait before logging training status')
    args = parser.parse_args()
    args.cuda = not args.no_cuda and torch.cuda.is_available()

    # Connecting ClearML with the current process,
    # from here on everything is logged automatically
    task = Task.init(project_name='examples', task_name='pytorch with tensorboardX')

    writer = SummaryWriter('runs')
    writer.add_text('TEXT', 'This is some text', 0)

    torch.manual_seed(args.seed)
    if args.cuda:
        torch.cuda.manual_seed(args.seed)

    kwargs = {'num_workers': 4, 'pin_memory': True} if args.cuda else {}
    train_loader = torch.utils.data.DataLoader(datasets.MNIST('../data', train=True, download=True,
                                                              transform=transforms.Compose([
                                                                  transforms.ToTensor(),
                                                                  transforms.Normalize((0.1307,), (0.3081,))])),
                                               batch_size=args.batch_size, shuffle=True, **kwargs)
    test_loader = torch.utils.data.DataLoader(datasets.MNIST('../data', train=False,
                                                             transform=transforms.Compose([
                                                                 transforms.ToTensor(),
                                                                 transforms.Normalize((0.1307,), (0.3081,))])),
                                              batch_size=args.test_batch_size, shuffle=True, **kwargs)

    model = Net()
    if args.cuda:
        model.cuda()
    optimizer = optim.SGD(model.parameters(), lr=args.lr, momentum=args.momentum)

    for epoch in range(1, args.epochs + 1):
        train(model, epoch, train_loader, args, optimizer, writer)
        torch.save(model, os.path.join(gettempdir(), 'model{}'.format(epoch)))
    test(model, test_loader, args, optimizer, writer)


</clonepair2>
<clonepair3>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair3>

<clonepair3>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair3>
<clonepair4>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair4>

<clonepair4>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair4>
<clonepair5>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair5>

<clonepair5>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair5>
<clonepair6>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair6>

<clonepair6>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair6>
<clonepair7>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair7>

<clonepair7>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair7>
<clonepair8>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair8>

<clonepair8>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair8>
<clonepair9>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair9>

<clonepair9>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair9>
<clonepair10>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair10>

<clonepair10>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="2361" endline="2380" pcid="2489"></source>
    def __init__(
        self,
        worker,
        timestamp,
        task=None,
        queue=None,
        queues=None,
        machine_stats=None,
        tags=None,
        **kwargs
    ):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair10>
<clonepair11>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair11>

<clonepair11>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair11>
<clonepair12>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair12>

<clonepair12>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair12>
<clonepair13>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair13>

<clonepair13>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair13>
<clonepair14>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair14>

<clonepair14>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="2361" endline="2380" pcid="2489"></source>
    def __init__(
        self,
        worker,
        timestamp,
        task=None,
        queue=None,
        queues=None,
        machine_stats=None,
        tags=None,
        **kwargs
    ):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair14>
<clonepair15>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair15>

<clonepair15>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair15>
<clonepair16>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair16>

<clonepair16>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair16>
<clonepair17>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair17>

<clonepair17>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair17>
<clonepair18>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair18>

<clonepair18>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair18>
<clonepair19>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair19>

<clonepair19>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair19>
<clonepair20>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="917" endline="950" pcid="1817"></source>
    def __init__(
        self,
        uri,
        name,
        comment=None,
        tags=None,
        system_tags=None,
        framework=None,
        design=None,
        labels=None,
        ready=False,
        public=False,
        project=None,
        parent=None,
        task=None,
        metadata=None,
        **kwargs
    ):
        super(CreateRequest, self).__init__(**kwargs)
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.framework = framework
        self.design = design
        self.labels = labels
        self.ready = ready
        self.public = public
        self.project = project
        self.parent = parent
        self.task = task
        self.metadata = metadata

</clonepair20>

<clonepair20>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="12241" endline="12274" pcid="3318"></source>
    def __init__(
        self,
        name,
        type,
        tags=None,
        system_tags=None,
        comment=None,
        parent=None,
        project=None,
        output_dest=None,
        execution=None,
        script=None,
        hyperparams=None,
        configuration=None,
        models=None,
        container=None,
        **kwargs
    ):
        super(ValidateRequest, self).__init__(**kwargs)
        self.name = name
        self.tags = tags
        self.system_tags = system_tags
        self.type = type
        self.comment = comment
        self.parent = parent
        self.project = project
        self.output_dest = output_dest
        self.execution = execution
        self.script = script
        self.hyperparams = hyperparams
        self.configuration = configuration
        self.models = models
        self.container = container

</clonepair20>
<clonepair21>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair21>

<clonepair21>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair21>
<clonepair22>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="917" endline="950" pcid="1817"></source>
    def __init__(
        self,
        uri,
        name,
        comment=None,
        tags=None,
        system_tags=None,
        framework=None,
        design=None,
        labels=None,
        ready=False,
        public=False,
        project=None,
        parent=None,
        task=None,
        metadata=None,
        **kwargs
    ):
        super(CreateRequest, self).__init__(**kwargs)
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.framework = framework
        self.design = design
        self.labels = labels
        self.ready = ready
        self.public = public
        self.project = project
        self.parent = parent
        self.task = task
        self.metadata = metadata

</clonepair22>

<clonepair22>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="526" endline="555" pcid="2363"></source>
    def __init__(
        self,
        id=None,
        user=None,
        company=None,
        ip=None,
        register_time=None,
        last_activity_time=None,
        last_report_time=None,
        task=None,
        project=None,
        queue=None,
        queues=None,
        tags=None,
        **kwargs
    ):
        super(Worker, self).__init__(**kwargs)
        self.id = id
        self.user = user
        self.company = company
        self.ip = ip
        self.register_time = register_time
        self.last_activity_time = last_activity_time
        self.last_report_time = last_report_time
        self.task = task
        self.project = project
        self.queue = queue
        self.queues = queues
        self.tags = tags

</clonepair22>
<clonepair23>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair23>

<clonepair23>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair23>
<clonepair24>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair24>

<clonepair24>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair24>
<clonepair25>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair25>

<clonepair25>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair25>
<clonepair26>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair26>

<clonepair26>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair26>
<clonepair27>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair27>

<clonepair27>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair27>
<clonepair28>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair28>

<clonepair28>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair28>
<clonepair29>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair29>

<clonepair29>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair29>
<clonepair30>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair30>

<clonepair30>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair30>
<clonepair31>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair31>

<clonepair31>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair31>
<clonepair32>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair32>

<clonepair32>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair32>
<clonepair33>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair33>

<clonepair33>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair33>
<clonepair34>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair34>

<clonepair34>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair34>
<clonepair35>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair35>

<clonepair35>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair35>
<clonepair36>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair36>

<clonepair36>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair36>
<clonepair37>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair37>

<clonepair37>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair37>
<clonepair38>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair38>

<clonepair38>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="2361" endline="2380" pcid="2489"></source>
    def __init__(
        self,
        worker,
        timestamp,
        task=None,
        queue=None,
        queues=None,
        machine_stats=None,
        tags=None,
        **kwargs
    ):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair38>
<clonepair39>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair39>

<clonepair39>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair39>
<clonepair40>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair40>

<clonepair40>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair40>
<clonepair41>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair41>

<clonepair41>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair41>
<clonepair42>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair42>

<clonepair42>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair42>
<clonepair43>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair43>

<clonepair43>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair43>
<clonepair44>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair44>

<clonepair44>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair44>
<clonepair45>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair45>

<clonepair45>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair45>
<clonepair46>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair46>

<clonepair46>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair46>
<clonepair47>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair47>

<clonepair47>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair47>
<clonepair48>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair48>

<clonepair48>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair48>
<clonepair49>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair49>

<clonepair49>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair49>
<clonepair50>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="594" endline="653" pcid="12"></source>
    def report_confusion_matrix(
            self,
            title,  # type: str
            series,  # type: str
            matrix,  # type: np.ndarray
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            xlabels=None,  # type: Optional[List[str]]
            ylabels=None,  # type: Optional[List[str]]
            yaxis_reversed=False,  # type: bool
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a heat-map matrix.

        For example:

        .. code-block:: py

           confusion = np.random.randint(10, size=(10, 10))
           logger.report_confusion_matrix("example confusion matrix", "ignored", iteration=1, matrix=confusion,
                xaxis="title X", yaxis="title Y")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported confusion matrix.
        :param numpy.ndarray matrix: A heat-map matrix (example: confusion matrix)
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) xlabels: Labels for each column of the matrix. (Optional)
        :param list(str) ylabels: Labels for each row of the matrix. (Optional)
        :param bool yaxis_reversed: If False 0,0 is at the bottom left corner. If True 0,0 is at the Top left corner
        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(matrix, np.ndarray):
            matrix = np.array(matrix)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_value_matrix(
            title=title,
            series=series,
            data=matrix.astype(np.float32),
            iter=iteration or 0,
            xtitle=xaxis,
            ytitle=yaxis,
            xlabels=xlabels,
            ylabels=ylabels,
            yaxis_reversed=yaxis_reversed,
            comment=comment,
            layout_config=extra_layout,
</clonepair50>

<clonepair50>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="691" endline="755" pcid="14"></source>
    def report_surface(
            self,
            title,  # type: str
            series,  # type: str
            matrix,  # type: np.ndarray
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            zaxis=None,  # type: Optional[str]
            xlabels=None,  # type: Optional[List[str]]
            ylabels=None,  # type: Optional[List[str]]
            camera=None,  # type: Optional[Sequence[float]]
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, report a 3d surface plot.

        .. note::
           This method plots the same data as :meth:`Logger.report_confusion_matrix`, but presents the
           data as a surface diagram not a confusion matrix.

        .. code-block:: py

           surface_matrix = np.random.randint(10, size=(10, 10))
           logger.report_surface("example surface", "series", iteration=0, matrix=surface_matrix,
                xaxis="title X", yaxis="title Y", zaxis="title Z")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported surface.
        :param numpy.ndarray matrix: A heat-map matrix (example: confusion matrix)
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param str zaxis: The z-axis title. (Optional)
        :param list(str) xlabels: Labels for each column of the matrix. (Optional)
        :param list(str) ylabels: Labels for each row of the matrix. (Optional)
        :param list(float) camera: X,Y,Z coordinates indicating the camera position. The default value is ``(1,1,1)``.
        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(matrix, np.ndarray):
            matrix = np.array(matrix)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_value_surface(
            title=title,
            series=series,
            data=matrix.astype(np.float32),
            iter=iteration or 0,
            xlabels=xlabels,
            ylabels=ylabels,
            xtitle=xaxis,
            ytitle=yaxis,
            ztitle=zaxis,
            camera=camera,
            comment=comment,
            layout_config=extra_layout,
</clonepair50>
<clonepair51>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="417" endline="496" pcid="10"></source>
    def report_scatter2d(
            self,
            title,  # type: str
            series,  # type: str
            scatter,  # type: Union[Sequence[Tuple[float, float]], np.ndarray]
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            labels=None,  # type: Optional[List[str]]
            mode='lines',  # type: str
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, report a 2d scatter plot.

        For example:

        .. code-block:: py

           scatter2d = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d(title="example_scatter", series="series", iteration=0, scatter=scatter2d,
                xaxis="title x", yaxis="title y")

        Plot multiple 2D scatter series on the same plot by passing the same ``title`` and ``iteration`` values
        to this method:

        .. code-block:: py

           scatter2d_1 = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d(title="example_scatter", series="series_1", iteration=1, scatter=scatter2d_1,
                xaxis="title x", yaxis="title y")

           scatter2d_2 = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d("example_scatter", "series_2", iteration=1, scatter=scatter2d_2,
                xaxis="title x", yaxis="title y")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported scatter plot.
        :param list scatter: The scatter data. numpy.ndarray or list of (pairs of x,y) scatter:
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) labels: Labels per point in the data assigned to the ``scatter`` parameter. The labels must be
            in the same order as the data.
        :param str mode: The type of scatter plot.

            The values are:

            - ``lines``
            - ``markers``
            - ``lines+markers``

        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(scatter, np.ndarray):
            if not isinstance(scatter, list):
                scatter = list(scatter)
            scatter = np.array(scatter)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_2d_scatter(
            title=title,
            series=series,
            data=scatter,
            iter=iteration or 0,
            mode=mode,
            xtitle=xaxis,
            ytitle=yaxis,
            labels=labels,
            comment=comment,
            layout_config=extra_layout,
</clonepair51>

<clonepair51>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="691" endline="755" pcid="14"></source>
    def report_surface(
            self,
            title,  # type: str
            series,  # type: str
            matrix,  # type: np.ndarray
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            zaxis=None,  # type: Optional[str]
            xlabels=None,  # type: Optional[List[str]]
            ylabels=None,  # type: Optional[List[str]]
            camera=None,  # type: Optional[Sequence[float]]
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, report a 3d surface plot.

        .. note::
           This method plots the same data as :meth:`Logger.report_confusion_matrix`, but presents the
           data as a surface diagram not a confusion matrix.

        .. code-block:: py

           surface_matrix = np.random.randint(10, size=(10, 10))
           logger.report_surface("example surface", "series", iteration=0, matrix=surface_matrix,
                xaxis="title X", yaxis="title Y", zaxis="title Z")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported surface.
        :param numpy.ndarray matrix: A heat-map matrix (example: confusion matrix)
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param str zaxis: The z-axis title. (Optional)
        :param list(str) xlabels: Labels for each column of the matrix. (Optional)
        :param list(str) ylabels: Labels for each row of the matrix. (Optional)
        :param list(float) camera: X,Y,Z coordinates indicating the camera position. The default value is ``(1,1,1)``.
        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(matrix, np.ndarray):
            matrix = np.array(matrix)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_value_surface(
            title=title,
            series=series,
            data=matrix.astype(np.float32),
            iter=iteration or 0,
            xlabels=xlabels,
            ylabels=ylabels,
            xtitle=xaxis,
            ytitle=yaxis,
            ztitle=zaxis,
            camera=camera,
            comment=comment,
            layout_config=extra_layout,
</clonepair51>
<clonepair52>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="218" endline="280" pcid="6"></source>
    def report_histogram(
            self,
            title,  # type: str
            series,  # type: str
            values,  # type: Sequence[Union[int, float]]
            iteration=None,  # type: Optional[int]
            labels=None,  # type: Optional[List[str]]
            xlabels=None,  # type: Optional[List[str]]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            mode=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a (default grouped) histogram.
        Notice this function will not calculate the histogram,
        it assumes the histogram was already calculated in `values`

        For example:

        .. code-block:: py

           vector_series = np.random.randint(10, size=10).reshape(2,5)
           logger.report_histogram(title='histogram example', series='histogram series',
                values=vector_series, iteration=0, labels=['A','B'], xaxis='X axis label', yaxis='Y axis label')

        You can view the reported histograms in the **ClearML Web-App (UI)**, **RESULTS** tab, **PLOTS** sub-tab.

        :param title: The title (metric) of the plot.
        :param series: The series name (variant) of the reported histogram.
        :param values: The series values. A list of floats, or an N-dimensional Numpy array containing
            data for each histogram bar.
        :param iteration: The reported iteration / step. Each ``iteration`` creates another plot.
        :param labels: Labels for each bar group, creating a plot legend labeling each series. (Optional)
        :param xlabels: Labels per entry in each bucket in the histogram (vector), creating a set of labels
            for each histogram bar on the x-axis. (Optional)
        :param xaxis: The x-axis title. (Optional)
        :param yaxis: The y-axis title. (Optional)
        :param mode: Multiple histograms mode, stack / group / relative. Default is 'group'.
        :param extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(values, np.ndarray):
            values = np.array(values)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_histogram(
            title=title,
            series=series,
            histogram=values,
            iter=iteration or 0,
            labels=labels,
            xlabels=xlabels,
            xtitle=xaxis,
            ytitle=yaxis,
            mode=mode or 'group',
            layout_config=extra_layout,
</clonepair52>

<clonepair52>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="691" endline="755" pcid="14"></source>
    def report_surface(
            self,
            title,  # type: str
            series,  # type: str
            matrix,  # type: np.ndarray
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            zaxis=None,  # type: Optional[str]
            xlabels=None,  # type: Optional[List[str]]
            ylabels=None,  # type: Optional[List[str]]
            camera=None,  # type: Optional[Sequence[float]]
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, report a 3d surface plot.

        .. note::
           This method plots the same data as :meth:`Logger.report_confusion_matrix`, but presents the
           data as a surface diagram not a confusion matrix.

        .. code-block:: py

           surface_matrix = np.random.randint(10, size=(10, 10))
           logger.report_surface("example surface", "series", iteration=0, matrix=surface_matrix,
                xaxis="title X", yaxis="title Y", zaxis="title Z")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported surface.
        :param numpy.ndarray matrix: A heat-map matrix (example: confusion matrix)
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param str zaxis: The z-axis title. (Optional)
        :param list(str) xlabels: Labels for each column of the matrix. (Optional)
        :param list(str) ylabels: Labels for each row of the matrix. (Optional)
        :param list(float) camera: X,Y,Z coordinates indicating the camera position. The default value is ``(1,1,1)``.
        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(matrix, np.ndarray):
            matrix = np.array(matrix)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_value_surface(
            title=title,
            series=series,
            data=matrix.astype(np.float32),
            iter=iteration or 0,
            xlabels=xlabels,
            ylabels=ylabels,
            xtitle=xaxis,
            ytitle=yaxis,
            ztitle=zaxis,
            camera=camera,
            comment=comment,
            layout_config=extra_layout,
</clonepair52>
<clonepair53>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair53>

<clonepair53>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair53>
<clonepair54>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair54>

<clonepair54>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair54>
<clonepair55>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair55>

<clonepair55>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair55>
<clonepair56>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair56>

<clonepair56>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair56>
<clonepair57>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair57>

<clonepair57>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair57>
<clonepair58>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="417" endline="496" pcid="10"></source>
    def report_scatter2d(
            self,
            title,  # type: str
            series,  # type: str
            scatter,  # type: Union[Sequence[Tuple[float, float]], np.ndarray]
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            labels=None,  # type: Optional[List[str]]
            mode='lines',  # type: str
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, report a 2d scatter plot.

        For example:

        .. code-block:: py

           scatter2d = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d(title="example_scatter", series="series", iteration=0, scatter=scatter2d,
                xaxis="title x", yaxis="title y")

        Plot multiple 2D scatter series on the same plot by passing the same ``title`` and ``iteration`` values
        to this method:

        .. code-block:: py

           scatter2d_1 = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d(title="example_scatter", series="series_1", iteration=1, scatter=scatter2d_1,
                xaxis="title x", yaxis="title y")

           scatter2d_2 = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d("example_scatter", "series_2", iteration=1, scatter=scatter2d_2,
                xaxis="title x", yaxis="title y")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported scatter plot.
        :param list scatter: The scatter data. numpy.ndarray or list of (pairs of x,y) scatter:
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) labels: Labels per point in the data assigned to the ``scatter`` parameter. The labels must be
            in the same order as the data.
        :param str mode: The type of scatter plot.

            The values are:

            - ``lines``
            - ``markers``
            - ``lines+markers``

        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(scatter, np.ndarray):
            if not isinstance(scatter, list):
                scatter = list(scatter)
            scatter = np.array(scatter)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_2d_scatter(
            title=title,
            series=series,
            data=scatter,
            iter=iteration or 0,
            mode=mode,
            xtitle=xaxis,
            ytitle=yaxis,
            labels=labels,
            comment=comment,
            layout_config=extra_layout,
</clonepair58>

<clonepair58>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="594" endline="653" pcid="12"></source>
    def report_confusion_matrix(
            self,
            title,  # type: str
            series,  # type: str
            matrix,  # type: np.ndarray
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            xlabels=None,  # type: Optional[List[str]]
            ylabels=None,  # type: Optional[List[str]]
            yaxis_reversed=False,  # type: bool
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a heat-map matrix.

        For example:

        .. code-block:: py

           confusion = np.random.randint(10, size=(10, 10))
           logger.report_confusion_matrix("example confusion matrix", "ignored", iteration=1, matrix=confusion,
                xaxis="title X", yaxis="title Y")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported confusion matrix.
        :param numpy.ndarray matrix: A heat-map matrix (example: confusion matrix)
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) xlabels: Labels for each column of the matrix. (Optional)
        :param list(str) ylabels: Labels for each row of the matrix. (Optional)
        :param bool yaxis_reversed: If False 0,0 is at the bottom left corner. If True 0,0 is at the Top left corner
        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(matrix, np.ndarray):
            matrix = np.array(matrix)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_value_matrix(
            title=title,
            series=series,
            data=matrix.astype(np.float32),
            iter=iteration or 0,
            xtitle=xaxis,
            ytitle=yaxis,
            xlabels=xlabels,
            ylabels=ylabels,
            yaxis_reversed=yaxis_reversed,
            comment=comment,
            layout_config=extra_layout,
</clonepair58>
<clonepair59>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="218" endline="280" pcid="6"></source>
    def report_histogram(
            self,
            title,  # type: str
            series,  # type: str
            values,  # type: Sequence[Union[int, float]]
            iteration=None,  # type: Optional[int]
            labels=None,  # type: Optional[List[str]]
            xlabels=None,  # type: Optional[List[str]]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            mode=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a (default grouped) histogram.
        Notice this function will not calculate the histogram,
        it assumes the histogram was already calculated in `values`

        For example:

        .. code-block:: py

           vector_series = np.random.randint(10, size=10).reshape(2,5)
           logger.report_histogram(title='histogram example', series='histogram series',
                values=vector_series, iteration=0, labels=['A','B'], xaxis='X axis label', yaxis='Y axis label')

        You can view the reported histograms in the **ClearML Web-App (UI)**, **RESULTS** tab, **PLOTS** sub-tab.

        :param title: The title (metric) of the plot.
        :param series: The series name (variant) of the reported histogram.
        :param values: The series values. A list of floats, or an N-dimensional Numpy array containing
            data for each histogram bar.
        :param iteration: The reported iteration / step. Each ``iteration`` creates another plot.
        :param labels: Labels for each bar group, creating a plot legend labeling each series. (Optional)
        :param xlabels: Labels per entry in each bucket in the histogram (vector), creating a set of labels
            for each histogram bar on the x-axis. (Optional)
        :param xaxis: The x-axis title. (Optional)
        :param yaxis: The y-axis title. (Optional)
        :param mode: Multiple histograms mode, stack / group / relative. Default is 'group'.
        :param extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(values, np.ndarray):
            values = np.array(values)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_histogram(
            title=title,
            series=series,
            histogram=values,
            iter=iteration or 0,
            labels=labels,
            xlabels=xlabels,
            xtitle=xaxis,
            ytitle=yaxis,
            mode=mode or 'group',
            layout_config=extra_layout,
</clonepair59>

<clonepair59>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="594" endline="653" pcid="12"></source>
    def report_confusion_matrix(
            self,
            title,  # type: str
            series,  # type: str
            matrix,  # type: np.ndarray
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            xlabels=None,  # type: Optional[List[str]]
            ylabels=None,  # type: Optional[List[str]]
            yaxis_reversed=False,  # type: bool
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a heat-map matrix.

        For example:

        .. code-block:: py

           confusion = np.random.randint(10, size=(10, 10))
           logger.report_confusion_matrix("example confusion matrix", "ignored", iteration=1, matrix=confusion,
                xaxis="title X", yaxis="title Y")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported confusion matrix.
        :param numpy.ndarray matrix: A heat-map matrix (example: confusion matrix)
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) xlabels: Labels for each column of the matrix. (Optional)
        :param list(str) ylabels: Labels for each row of the matrix. (Optional)
        :param bool yaxis_reversed: If False 0,0 is at the bottom left corner. If True 0,0 is at the Top left corner
        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(matrix, np.ndarray):
            matrix = np.array(matrix)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_value_matrix(
            title=title,
            series=series,
            data=matrix.astype(np.float32),
            iter=iteration or 0,
            xtitle=xaxis,
            ytitle=yaxis,
            xlabels=xlabels,
            ylabels=ylabels,
            yaxis_reversed=yaxis_reversed,
            comment=comment,
            layout_config=extra_layout,
</clonepair59>
<clonepair60>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="358" endline="416" pcid="9"></source>
    def report_line_plot(
            self,
            title,  # type: str
            series,  # type: Sequence[SeriesInfo]
            xaxis,  # type: str
            yaxis,  # type: str
            mode='lines',  # type: str
            iteration=None,  # type: Optional[int]
            reverse_xaxis=False,  # type: bool
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot one or more series as lines.

        :param str title: The title (metric) of the plot.
        :param list series: All the series data, one list element for each line in the plot.
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param str mode: The type of line plot.

            The values are:

            - ``lines`` (default)
            - ``markers``
            - ``lines+markers``

        :param bool reverse_xaxis: Reverse the x-axis

            The values are:

            - ``True`` - The x-axis is high to low  (reversed).
            - ``False`` - The x-axis is low to high  (not reversed). (default)

        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        # noinspection PyArgumentList
        series = [self.SeriesInfo(**s) if isinstance(s, dict) else s for s in series]

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series[0].name if series else '')
        # noinspection PyProtectedMember
        return self._task._reporter.report_line_plot(
            title=title,
            series=series,
            iter=iteration or 0,
            xtitle=xaxis,
            ytitle=yaxis,
            mode=mode,
            reverse_xaxis=reverse_xaxis,
            comment=comment,
            layout_config=extra_layout,
</clonepair60>

<clonepair60>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="594" endline="653" pcid="12"></source>
    def report_confusion_matrix(
            self,
            title,  # type: str
            series,  # type: str
            matrix,  # type: np.ndarray
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            xlabels=None,  # type: Optional[List[str]]
            ylabels=None,  # type: Optional[List[str]]
            yaxis_reversed=False,  # type: bool
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a heat-map matrix.

        For example:

        .. code-block:: py

           confusion = np.random.randint(10, size=(10, 10))
           logger.report_confusion_matrix("example confusion matrix", "ignored", iteration=1, matrix=confusion,
                xaxis="title X", yaxis="title Y")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported confusion matrix.
        :param numpy.ndarray matrix: A heat-map matrix (example: confusion matrix)
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) xlabels: Labels for each column of the matrix. (Optional)
        :param list(str) ylabels: Labels for each row of the matrix. (Optional)
        :param bool yaxis_reversed: If False 0,0 is at the bottom left corner. If True 0,0 is at the Top left corner
        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(matrix, np.ndarray):
            matrix = np.array(matrix)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_value_matrix(
            title=title,
            series=series,
            data=matrix.astype(np.float32),
            iter=iteration or 0,
            xtitle=xaxis,
            ytitle=yaxis,
            xlabels=xlabels,
            ylabels=ylabels,
            yaxis_reversed=yaxis_reversed,
            comment=comment,
            layout_config=extra_layout,
</clonepair60>
<clonepair61>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair61>

<clonepair61>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair61>
<clonepair62>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair62>

<clonepair62>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair62>
<clonepair63>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="218" endline="280" pcid="6"></source>
    def report_histogram(
            self,
            title,  # type: str
            series,  # type: str
            values,  # type: Sequence[Union[int, float]]
            iteration=None,  # type: Optional[int]
            labels=None,  # type: Optional[List[str]]
            xlabels=None,  # type: Optional[List[str]]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            mode=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a (default grouped) histogram.
        Notice this function will not calculate the histogram,
        it assumes the histogram was already calculated in `values`

        For example:

        .. code-block:: py

           vector_series = np.random.randint(10, size=10).reshape(2,5)
           logger.report_histogram(title='histogram example', series='histogram series',
                values=vector_series, iteration=0, labels=['A','B'], xaxis='X axis label', yaxis='Y axis label')

        You can view the reported histograms in the **ClearML Web-App (UI)**, **RESULTS** tab, **PLOTS** sub-tab.

        :param title: The title (metric) of the plot.
        :param series: The series name (variant) of the reported histogram.
        :param values: The series values. A list of floats, or an N-dimensional Numpy array containing
            data for each histogram bar.
        :param iteration: The reported iteration / step. Each ``iteration`` creates another plot.
        :param labels: Labels for each bar group, creating a plot legend labeling each series. (Optional)
        :param xlabels: Labels per entry in each bucket in the histogram (vector), creating a set of labels
            for each histogram bar on the x-axis. (Optional)
        :param xaxis: The x-axis title. (Optional)
        :param yaxis: The y-axis title. (Optional)
        :param mode: Multiple histograms mode, stack / group / relative. Default is 'group'.
        :param extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(values, np.ndarray):
            values = np.array(values)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_histogram(
            title=title,
            series=series,
            histogram=values,
            iter=iteration or 0,
            labels=labels,
            xlabels=xlabels,
            xtitle=xaxis,
            ytitle=yaxis,
            mode=mode or 'group',
            layout_config=extra_layout,
</clonepair63>

<clonepair63>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="417" endline="496" pcid="10"></source>
    def report_scatter2d(
            self,
            title,  # type: str
            series,  # type: str
            scatter,  # type: Union[Sequence[Tuple[float, float]], np.ndarray]
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            labels=None,  # type: Optional[List[str]]
            mode='lines',  # type: str
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, report a 2d scatter plot.

        For example:

        .. code-block:: py

           scatter2d = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d(title="example_scatter", series="series", iteration=0, scatter=scatter2d,
                xaxis="title x", yaxis="title y")

        Plot multiple 2D scatter series on the same plot by passing the same ``title`` and ``iteration`` values
        to this method:

        .. code-block:: py

           scatter2d_1 = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d(title="example_scatter", series="series_1", iteration=1, scatter=scatter2d_1,
                xaxis="title x", yaxis="title y")

           scatter2d_2 = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d("example_scatter", "series_2", iteration=1, scatter=scatter2d_2,
                xaxis="title x", yaxis="title y")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported scatter plot.
        :param list scatter: The scatter data. numpy.ndarray or list of (pairs of x,y) scatter:
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) labels: Labels per point in the data assigned to the ``scatter`` parameter. The labels must be
            in the same order as the data.
        :param str mode: The type of scatter plot.

            The values are:

            - ``lines``
            - ``markers``
            - ``lines+markers``

        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(scatter, np.ndarray):
            if not isinstance(scatter, list):
                scatter = list(scatter)
            scatter = np.array(scatter)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_2d_scatter(
            title=title,
            series=series,
            data=scatter,
            iter=iteration or 0,
            mode=mode,
            xtitle=xaxis,
            ytitle=yaxis,
            labels=labels,
            comment=comment,
            layout_config=extra_layout,
</clonepair63>
<clonepair64>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="358" endline="416" pcid="9"></source>
    def report_line_plot(
            self,
            title,  # type: str
            series,  # type: Sequence[SeriesInfo]
            xaxis,  # type: str
            yaxis,  # type: str
            mode='lines',  # type: str
            iteration=None,  # type: Optional[int]
            reverse_xaxis=False,  # type: bool
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot one or more series as lines.

        :param str title: The title (metric) of the plot.
        :param list series: All the series data, one list element for each line in the plot.
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param str mode: The type of line plot.

            The values are:

            - ``lines`` (default)
            - ``markers``
            - ``lines+markers``

        :param bool reverse_xaxis: Reverse the x-axis

            The values are:

            - ``True`` - The x-axis is high to low  (reversed).
            - ``False`` - The x-axis is low to high  (not reversed). (default)

        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        # noinspection PyArgumentList
        series = [self.SeriesInfo(**s) if isinstance(s, dict) else s for s in series]

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series[0].name if series else '')
        # noinspection PyProtectedMember
        return self._task._reporter.report_line_plot(
            title=title,
            series=series,
            iter=iteration or 0,
            xtitle=xaxis,
            ytitle=yaxis,
            mode=mode,
            reverse_xaxis=reverse_xaxis,
            comment=comment,
            layout_config=extra_layout,
</clonepair64>

<clonepair64>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="417" endline="496" pcid="10"></source>
    def report_scatter2d(
            self,
            title,  # type: str
            series,  # type: str
            scatter,  # type: Union[Sequence[Tuple[float, float]], np.ndarray]
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            labels=None,  # type: Optional[List[str]]
            mode='lines',  # type: str
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, report a 2d scatter plot.

        For example:

        .. code-block:: py

           scatter2d = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d(title="example_scatter", series="series", iteration=0, scatter=scatter2d,
                xaxis="title x", yaxis="title y")

        Plot multiple 2D scatter series on the same plot by passing the same ``title`` and ``iteration`` values
        to this method:

        .. code-block:: py

           scatter2d_1 = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d(title="example_scatter", series="series_1", iteration=1, scatter=scatter2d_1,
                xaxis="title x", yaxis="title y")

           scatter2d_2 = np.hstack((np.atleast_2d(np.arange(0, 10)).T, np.random.randint(10, size=(10, 1))))
           logger.report_scatter2d("example_scatter", "series_2", iteration=1, scatter=scatter2d_2,
                xaxis="title x", yaxis="title y")

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported scatter plot.
        :param list scatter: The scatter data. numpy.ndarray or list of (pairs of x,y) scatter:
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) labels: Labels per point in the data assigned to the ``scatter`` parameter. The labels must be
            in the same order as the data.
        :param str mode: The type of scatter plot.

            The values are:

            - ``lines``
            - ``markers``
            - ``lines+markers``

        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(scatter, np.ndarray):
            if not isinstance(scatter, list):
                scatter = list(scatter)
            scatter = np.array(scatter)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_2d_scatter(
            title=title,
            series=series,
            data=scatter,
            iter=iteration or 0,
            mode=mode,
            xtitle=xaxis,
            ytitle=yaxis,
            labels=labels,
            comment=comment,
            layout_config=extra_layout,
</clonepair64>
<clonepair65>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="218" endline="280" pcid="6"></source>
    def report_histogram(
            self,
            title,  # type: str
            series,  # type: str
            values,  # type: Sequence[Union[int, float]]
            iteration=None,  # type: Optional[int]
            labels=None,  # type: Optional[List[str]]
            xlabels=None,  # type: Optional[List[str]]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            mode=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a (default grouped) histogram.
        Notice this function will not calculate the histogram,
        it assumes the histogram was already calculated in `values`

        For example:

        .. code-block:: py

           vector_series = np.random.randint(10, size=10).reshape(2,5)
           logger.report_histogram(title='histogram example', series='histogram series',
                values=vector_series, iteration=0, labels=['A','B'], xaxis='X axis label', yaxis='Y axis label')

        You can view the reported histograms in the **ClearML Web-App (UI)**, **RESULTS** tab, **PLOTS** sub-tab.

        :param title: The title (metric) of the plot.
        :param series: The series name (variant) of the reported histogram.
        :param values: The series values. A list of floats, or an N-dimensional Numpy array containing
            data for each histogram bar.
        :param iteration: The reported iteration / step. Each ``iteration`` creates another plot.
        :param labels: Labels for each bar group, creating a plot legend labeling each series. (Optional)
        :param xlabels: Labels per entry in each bucket in the histogram (vector), creating a set of labels
            for each histogram bar on the x-axis. (Optional)
        :param xaxis: The x-axis title. (Optional)
        :param yaxis: The y-axis title. (Optional)
        :param mode: Multiple histograms mode, stack / group / relative. Default is 'group'.
        :param extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        if not isinstance(values, np.ndarray):
            values = np.array(values)

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series)
        # noinspection PyProtectedMember
        return self._task._reporter.report_histogram(
            title=title,
            series=series,
            histogram=values,
            iter=iteration or 0,
            labels=labels,
            xlabels=xlabels,
            xtitle=xaxis,
            ytitle=yaxis,
            mode=mode or 'group',
            layout_config=extra_layout,
</clonepair65>

<clonepair65>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="358" endline="416" pcid="9"></source>
    def report_line_plot(
            self,
            title,  # type: str
            series,  # type: Sequence[SeriesInfo]
            xaxis,  # type: str
            yaxis,  # type: str
            mode='lines',  # type: str
            iteration=None,  # type: Optional[int]
            reverse_xaxis=False,  # type: bool
            comment=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot one or more series as lines.

        :param str title: The title (metric) of the plot.
        :param list series: All the series data, one list element for each line in the plot.
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param str mode: The type of line plot.

            The values are:

            - ``lines`` (default)
            - ``markers``
            - ``lines+markers``

        :param bool reverse_xaxis: Reverse the x-axis

            The values are:

            - ``True`` - The x-axis is high to low  (reversed).
            - ``False`` - The x-axis is low to high  (not reversed). (default)

        :param str comment: A comment displayed with the plot, underneath the title.
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """

        # noinspection PyArgumentList
        series = [self.SeriesInfo(**s) if isinstance(s, dict) else s for s in series]

        # if task was not started, we have to start it
        self._start_task_if_needed()
        self._touch_title_series(title, series[0].name if series else '')
        # noinspection PyProtectedMember
        return self._task._reporter.report_line_plot(
            title=title,
            series=series,
            iter=iteration or 0,
            xtitle=xaxis,
            ytitle=yaxis,
            mode=mode,
            reverse_xaxis=reverse_xaxis,
            comment=comment,
            layout_config=extra_layout,
</clonepair65>
<clonepair66>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair66>

<clonepair66>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair66>
<clonepair67>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair67>

<clonepair67>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="2361" endline="2380" pcid="2489"></source>
    def __init__(
        self,
        worker,
        timestamp,
        task=None,
        queue=None,
        queues=None,
        machine_stats=None,
        tags=None,
        **kwargs
    ):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair67>
<clonepair68>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair68>

<clonepair68>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair68>
<clonepair69>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair69>

<clonepair69>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair69>
<clonepair70>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair70>

<clonepair70>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair70>
<clonepair71>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair71>

<clonepair71>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair71>
<clonepair72>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair72>

<clonepair72>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair72>
<clonepair73>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair73>

<clonepair73>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair73>
<clonepair74>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair74>

<clonepair74>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair74>
<clonepair75>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair75>

<clonepair75>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair75>
<clonepair76>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair76>

<clonepair76>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair76>
<clonepair77>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair77>

<clonepair77>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair77>
<clonepair78>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair78>

<clonepair78>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair78>
<clonepair79>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair79>

<clonepair79>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair79>
<clonepair80>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair80>

<clonepair80>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair80>
<clonepair81>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair81>

<clonepair81>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair81>
<clonepair82>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair82>

<clonepair82>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair82>
<clonepair83>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair83>

<clonepair83>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair83>
<clonepair84>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair84>

<clonepair84>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair84>
<clonepair85>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/models.py" startline="3967" endline="3988" pcid="2038"></source>
    def __init__(
        self,
        task,
        uri=None,
        name=None,
        comment=None,
        tags=None,
        system_tags=None,
        override_model_id=None,
        iteration=None,
        **kwargs
    ):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair85>

<clonepair85>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair85>
<clonepair86>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair86>

<clonepair86>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair86>
<clonepair87>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair87>

<clonepair87>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair87>
<clonepair88>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair88>

<clonepair88>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair88>
<clonepair89>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair89>

<clonepair89>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair89>
<clonepair90>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair90>

<clonepair90>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair90>
<clonepair91>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair91>

<clonepair91>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair91>
<clonepair92>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair92>

<clonepair92>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair92>
<clonepair93>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair93>

<clonepair93>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair93>
<clonepair94>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair94>

<clonepair94>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="895" endline="912" pcid="2581"></source>
    def __init__(
        self,
        queue=None,
        parameters=None,
        model_desc=None,
        model_labels=None,
        framework=None,
        artifacts=None,
        **kwargs
    ):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.artifacts = artifacts

</clonepair94>
<clonepair95>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair95>

<clonepair95>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair95>
<clonepair96>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair96>

<clonepair96>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair96>
<clonepair97>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair97>

<clonepair97>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair97>
<clonepair98>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair98>

<clonepair98>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair98>
<clonepair99>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair99>

<clonepair99>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair99>
<clonepair100>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair100>

<clonepair100>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair100>
<clonepair101>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair101>

<clonepair101>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="895" endline="912" pcid="2581"></source>
    def __init__(
        self,
        queue=None,
        parameters=None,
        model_desc=None,
        model_labels=None,
        framework=None,
        artifacts=None,
        **kwargs
    ):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.artifacts = artifacts

</clonepair101>
<clonepair102>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair102>

<clonepair102>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair102>
<clonepair103>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair103>

<clonepair103>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair103>
<clonepair104>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair104>

<clonepair104>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair104>
<clonepair105>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair105>

<clonepair105>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair105>
<clonepair106>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair106>

<clonepair106>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair106>
<clonepair107>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/queues.py" startline="59" endline="72" pcid="1519"></source>
    def __init__(
        self,
        queue=None,
        dates=None,
        avg_waiting_times=None,
        queue_lengths=None,
        **kwargs
    ):
        super(QueueMetrics, self).__init__(**kwargs)
        self.queue = queue
        self.dates = dates
        self.avg_waiting_times = avg_waiting_times
        self.queue_lengths = queue_lengths

</clonepair107>

<clonepair107>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair107>
<clonepair108>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair108>

<clonepair108>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair108>
<clonepair109>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair109>

<clonepair109>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair109>
<clonepair110>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair110>

<clonepair110>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair110>
<clonepair111>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair111>

<clonepair111>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="4714" endline="4731" pcid="2860"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        frames=None,
        events=None,
        urls=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.frames = frames
        self.events = events
        self.urls = urls

</clonepair111>
<clonepair112>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair112>

<clonepair112>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair112>
<clonepair113>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair113>

<clonepair113>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair113>
<clonepair114>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair114>

<clonepair114>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair114>
<clonepair115>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair115>

<clonepair115>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair115>
<clonepair116>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair116>

<clonepair116>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair116>
<clonepair117>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair117>

<clonepair117>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="4714" endline="4731" pcid="2860"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        frames=None,
        events=None,
        urls=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.frames = frames
        self.events = events
        self.urls = urls

</clonepair117>
<clonepair118>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair118>

<clonepair118>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair118>
<clonepair119>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair119>

<clonepair119>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="895" endline="912" pcid="2581"></source>
    def __init__(
        self,
        queue=None,
        parameters=None,
        model_desc=None,
        model_labels=None,
        framework=None,
        artifacts=None,
        **kwargs
    ):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.artifacts = artifacts

</clonepair119>
<clonepair120>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair120>

<clonepair120>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="895" endline="912" pcid="2581"></source>
    def __init__(
        self,
        queue=None,
        parameters=None,
        model_desc=None,
        model_labels=None,
        framework=None,
        artifacts=None,
        **kwargs
    ):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.artifacts = artifacts

</clonepair120>
<clonepair121>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair121>

<clonepair121>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair121>
<clonepair122>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair122>

<clonepair122>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair122>
<clonepair123>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="217" endline="234" pcid="3371"></source>
    def __init__(
        self,
        task,
        timestamp=None,
        iter=None,
        metric=None,
        variant=None,
        values=None,
        **kwargs
    ):
        super(MetricsVectorEvent, self).__init__(**kwargs)
        self.timestamp = timestamp
        self.task = task
        self.iter = iter
        self.metric = metric
        self.variant = variant
        self.values = values

</clonepair123>

<clonepair123>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair123>
<clonepair124>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair124>

<clonepair124>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair124>
<clonepair125>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair125>

<clonepair125>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair125>
<clonepair126>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair126>

<clonepair126>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair126>
<clonepair127>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair127>

<clonepair127>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair127>
<clonepair128>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair128>

<clonepair128>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair128>
<clonepair129>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair129>

<clonepair129>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair129>
<clonepair130>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair130>

<clonepair130>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair130>
<clonepair131>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair131>

<clonepair131>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair131>
<clonepair132>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair132>

<clonepair132>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair132>
<clonepair133>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair133>

<clonepair133>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair133>
<clonepair134>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair134>

<clonepair134>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair134>
<clonepair135>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair135>

<clonepair135>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair135>
<clonepair136>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair136>

<clonepair136>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair136>
<clonepair137>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair137>

<clonepair137>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair137>
<clonepair138>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair138>

<clonepair138>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair138>
<clonepair139>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair139>

<clonepair139>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair139>
<clonepair140>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair140>

<clonepair140>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair140>
<clonepair141>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair141>

<clonepair141>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair141>
<clonepair142>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair142>

<clonepair142>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair142>
<clonepair143>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair143>

<clonepair143>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair143>
<clonepair144>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair144>

<clonepair144>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair144>
<clonepair145>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair145>

<clonepair145>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair145>
<clonepair146>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair146>

<clonepair146>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair146>
<clonepair147>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair147>

<clonepair147>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair147>
<clonepair148>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair148>

<clonepair148>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair148>
<clonepair149>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair149>

<clonepair149>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair149>
<clonepair150>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair150>

<clonepair150>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair150>
<clonepair151>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="522" endline="538" pcid="7927"></source>
    def __init__(
            self, uri, name, comment=None, tags=None, system_tags=None, framework=None, design=None, labels=None, ready=False, public=False, project=None, parent=None, task=None, **kwargs):
        super(CreateRequest, self).__init__(**kwargs)
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.framework = framework
        self.design = design
        self.labels = labels
        self.ready = ready
        self.public = public
        self.project = project
        self.parent = parent
        self.task = task

</clonepair151>

<clonepair151>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair151>
<clonepair152>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair152>

<clonepair152>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair152>
<clonepair153>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair153>

<clonepair153>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair153>
<clonepair154>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="522" endline="538" pcid="7927"></source>
    def __init__(
            self, uri, name, comment=None, tags=None, system_tags=None, framework=None, design=None, labels=None, ready=False, public=False, project=None, parent=None, task=None, **kwargs):
        super(CreateRequest, self).__init__(**kwargs)
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.framework = framework
        self.design = design
        self.labels = labels
        self.ready = ready
        self.public = public
        self.project = project
        self.parent = parent
        self.task = task

</clonepair154>

<clonepair154>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="522" endline="537" pcid="8361"></source>
    def __init__(
            self, id=None, user=None, company=None, ip=None, register_time=None, last_activity_time=None, last_report_time=None, task=None, project=None, queue=None, queues=None, tags=None, **kwargs):
        super(Worker, self).__init__(**kwargs)
        self.id = id
        self.user = user
        self.company = company
        self.ip = ip
        self.register_time = register_time
        self.last_activity_time = last_activity_time
        self.last_report_time = last_report_time
        self.task = task
        self.project = project
        self.queue = queue
        self.queues = queues
        self.tags = tags

</clonepair154>
<clonepair155>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="522" endline="538" pcid="7927"></source>
    def __init__(
            self, uri, name, comment=None, tags=None, system_tags=None, framework=None, design=None, labels=None, ready=False, public=False, project=None, parent=None, task=None, **kwargs):
        super(CreateRequest, self).__init__(**kwargs)
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.framework = framework
        self.design = design
        self.labels = labels
        self.ready = ready
        self.public = public
        self.project = project
        self.parent = parent
        self.task = task

</clonepair155>

<clonepair155>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair155>
<clonepair156>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair156>

<clonepair156>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair156>
<clonepair157>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair157>

<clonepair157>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair157>
<clonepair158>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair158>

<clonepair158>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair158>
<clonepair159>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair159>

<clonepair159>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair159>
<clonepair160>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair160>

<clonepair160>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair160>
<clonepair161>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair161>

<clonepair161>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair161>
<clonepair162>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair162>

<clonepair162>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair162>
<clonepair163>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="217" endline="234" pcid="3371"></source>
    def __init__(
        self,
        task,
        timestamp=None,
        iter=None,
        metric=None,
        variant=None,
        values=None,
        **kwargs
    ):
        super(MetricsVectorEvent, self).__init__(**kwargs)
        self.timestamp = timestamp
        self.task = task
        self.iter = iter
        self.metric = metric
        self.variant = variant
        self.values = values

</clonepair163>

<clonepair163>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair163>
<clonepair164>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair164>

<clonepair164>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair164>
<clonepair165>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair165>

<clonepair165>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair165>
<clonepair166>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair166>

<clonepair166>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair166>
<clonepair167>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair167>

<clonepair167>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair167>
<clonepair168>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair168>

<clonepair168>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair168>
<clonepair169>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair169>

<clonepair169>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair169>
<clonepair170>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair170>

<clonepair170>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair170>
<clonepair171>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair171>

<clonepair171>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair171>
<clonepair172>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair172>

<clonepair172>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair172>
<clonepair173>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair173>

<clonepair173>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1895" endline="1912" pcid="2464"></source>
    def __init__(
        self,
        from_date,
        to_date,
        interval,
        items,
        worker_ids=None,
        split_by_variant=False,
        **kwargs
    ):
        super(GetStatsRequest, self).__init__(**kwargs)
        self.worker_ids = worker_ids
        self.from_date = from_date
        self.to_date = to_date
        self.interval = interval
        self.items = items
        self.split_by_variant = split_by_variant

</clonepair173>
<clonepair174>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair174>

<clonepair174>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair174>
<clonepair175>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair175>

<clonepair175>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair175>
<clonepair176>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair176>

<clonepair176>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair176>
<clonepair177>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair177>

<clonepair177>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="4714" endline="4731" pcid="2860"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        frames=None,
        events=None,
        urls=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.frames = frames
        self.events = events
        self.urls = urls

</clonepair177>
<clonepair178>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair178>

<clonepair178>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair178>
<clonepair179>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5295" endline="5310" pcid="2903"></source>
    def __init__(
        self,
        ids,
        move_to_trash=False,
        force=False,
        return_file_urls=None,
        delete_output_models=None,
        **kwargs
    ):
        super(DeleteManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.move_to_trash = move_to_trash
        self.force = force
        self.return_file_urls = return_file_urls
        self.delete_output_models = delete_output_models

</clonepair179>

<clonepair179>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair179>
<clonepair180>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair180>

<clonepair180>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair180>
<clonepair181>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair181>

<clonepair181>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair181>
<clonepair182>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair182>

<clonepair182>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair182>
<clonepair183>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="4714" endline="4731" pcid="2860"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        frames=None,
        events=None,
        urls=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.frames = frames
        self.events = events
        self.urls = urls

</clonepair183>

<clonepair183>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair183>
<clonepair184>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair184>

<clonepair184>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair184>
<clonepair185>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair185>

<clonepair185>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair185>
<clonepair186>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair186>

<clonepair186>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair186>
<clonepair187>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair187>

<clonepair187>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair187>
<clonepair188>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair188>

<clonepair188>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair188>
<clonepair189>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair189>

<clonepair189>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair189>
<clonepair190>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair190>

<clonepair190>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair190>
<clonepair191>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair191>

<clonepair191>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair191>
<clonepair192>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair192>

<clonepair192>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair192>
<clonepair193>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair193>

<clonepair193>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair193>
<clonepair194>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair194>

<clonepair194>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair194>
<clonepair195>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair195>

<clonepair195>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair195>
<clonepair196>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair196>

<clonepair196>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair196>
<clonepair197>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair197>

<clonepair197>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair197>
<clonepair198>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair198>

<clonepair198>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair198>
<clonepair199>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair199>

<clonepair199>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair199>
<clonepair200>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair200>

<clonepair200>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair200>
<clonepair201>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair201>

<clonepair201>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair201>
<clonepair202>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair202>

<clonepair202>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair202>
<clonepair203>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair203>

<clonepair203>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair203>
<clonepair204>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair204>

<clonepair204>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair204>
<clonepair205>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair205>

<clonepair205>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair205>
<clonepair206>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair206>

<clonepair206>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair206>
<clonepair207>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair207>

<clonepair207>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair207>
<clonepair208>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair208>

<clonepair208>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair208>
<clonepair209>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair209>

<clonepair209>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair209>
<clonepair210>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair210>

<clonepair210>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair210>
<clonepair211>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair211>

<clonepair211>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair211>
<clonepair212>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair212>

<clonepair212>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair212>
<clonepair213>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair213>

<clonepair213>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair213>
<clonepair214>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair214>

<clonepair214>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair214>
<clonepair215>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair215>

<clonepair215>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair215>
<clonepair216>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair216>

<clonepair216>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair216>
<clonepair217>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair217>

<clonepair217>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair217>
<clonepair218>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair218>

<clonepair218>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair218>
<clonepair219>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair219>

<clonepair219>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair219>
<clonepair220>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair220>

<clonepair220>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair220>
<clonepair221>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair221>

<clonepair221>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair221>
<clonepair222>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair222>

<clonepair222>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair222>
<clonepair223>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair223>

<clonepair223>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair223>
<clonepair224>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair224>

<clonepair224>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair224>
<clonepair225>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="174" endline="217" pcid="5"></source>
    def report_vector(
            self,
            title,  # type: str
            series,  # type: str
            values,  # type: Sequence[Union[int, float]]
            iteration=None,  # type: Optional[int]
            labels=None,  # type: Optional[List[str]]
            xlabels=None,  # type: Optional[List[str]]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            mode=None,  # type: Optional[str]
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a vector as (default stacked) histogram.

        For example:

        .. code-block:: py

           vector_series = np.random.randint(10, size=10).reshape(2,5)
           logger.report_vector(title='vector example', series='vector series', values=vector_series, iteration=0,
                labels=['A','B'], xaxis='X axis label', yaxis='Y axis label')

        You can view the vectors plots in the **ClearML Web-App (UI)**, **RESULTS** tab, **PLOTS** sub-tab.

        :param title: The title (metric) of the plot.
        :param series: The series name (variant) of the reported histogram.
        :param values: The series values. A list of floats, or an N-dimensional Numpy array containing
            data for each histogram bar.
        :param iteration: The reported iteration / step. Each ``iteration`` creates another plot.
        :param labels: Labels for each bar group, creating a plot legend labeling each series. (Optional)
        :param xlabels: Labels per entry in each bucket in the histogram (vector), creating a set of labels
            for each histogram bar on the x-axis. (Optional)
        :param xaxis: The x-axis title. (Optional)
        :param yaxis: The y-axis title. (Optional)
        :param mode: Multiple histograms mode, stack / group / relative. Default is 'group'.
        :param extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """
        self._touch_title_series(title, series)
        return self.report_histogram(title, series, values, iteration or 0, labels=labels, xlabels=xlabels,
</clonepair225>

<clonepair225>
<source file="systems/clearml-1.1.6/clearml/logger.py" startline="654" endline="690" pcid="13"></source>
    def report_matrix(
            self,
            title,  # type: str
            series,  # type: str
            matrix,  # type: np.ndarray
            iteration=None,  # type: Optional[int]
            xaxis=None,  # type: Optional[str]
            yaxis=None,  # type: Optional[str]
            xlabels=None,  # type: Optional[List[str]]
            ylabels=None,  # type: Optional[List[str]]
            yaxis_reversed=False,  # type: bool
            extra_layout=None,  # type: Optional[dict]
    ):
        """
        For explicit reporting, plot a confusion matrix.

        .. note::
            This method is the same as :meth:`Logger.report_confusion_matrix`.

        :param str title: The title (metric) of the plot.
        :param str series: The series name (variant) of the reported confusion matrix.
        :param numpy.ndarray matrix: A heat-map matrix (example: confusion matrix)
        :param int iteration: The reported iteration / step.
        :param str xaxis: The x-axis title. (Optional)
        :param str yaxis: The y-axis title. (Optional)
        :param list(str) xlabels: Labels for each column of the matrix. (Optional)
        :param list(str) ylabels: Labels for each row of the matrix. (Optional)
        :param bool yaxis_reversed: If False 0,0 is at the bottom left corner. If True 0,0 is at the Top left corner
        :param dict extra_layout: optional dictionary for layout configuration, passed directly to plotly
            example: extra_layout={'xaxis': {'type': 'date', 'range': ['2020-01-01', '2020-01-31']}}
        """
        self._touch_title_series(title, series)
        return self.report_confusion_matrix(title, series, matrix, iteration or 0,
                                            xaxis=xaxis, yaxis=yaxis, xlabels=xlabels, ylabels=ylabels,
                                            yaxis_reversed=yaxis_reversed,
</clonepair225>
<clonepair226>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair226>

<clonepair226>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair226>
<clonepair227>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair227>

<clonepair227>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair227>
<clonepair228>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair228>

<clonepair228>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair228>
<clonepair229>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair229>

<clonepair229>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair229>
<clonepair230>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair230>

<clonepair230>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair230>
<clonepair231>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="1054" endline="1069" pcid="2594"></source>
    def __init__(
        self,
        metric=None,
        variant=None,
        value=None,
        min_value=None,
        max_value=None,
        **kwargs
    ):
        super(LastMetricsEvent, self).__init__(**kwargs)
        self.metric = metric
        self.variant = variant
        self.value = value
        self.min_value = min_value
        self.max_value = max_value

</clonepair231>

<clonepair231>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair231>
<clonepair232>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair232>

<clonepair232>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair232>
<clonepair233>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair233>

<clonepair233>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair233>
<clonepair234>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair234>

<clonepair234>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair234>
<clonepair235>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair235>

<clonepair235>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair235>
<clonepair236>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair236>

<clonepair236>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair236>
<clonepair237>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair237>

<clonepair237>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair237>
<clonepair238>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair238>

<clonepair238>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair238>
<clonepair239>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair239>

<clonepair239>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair239>
<clonepair240>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair240>

<clonepair240>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair240>
<clonepair241>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair241>

<clonepair241>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair241>
<clonepair242>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair242>

<clonepair242>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair242>
<clonepair243>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair243>

<clonepair243>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair243>
<clonepair244>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair244>

<clonepair244>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair244>
<clonepair245>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair245>

<clonepair245>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair245>
<clonepair246>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair246>

<clonepair246>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair246>
<clonepair247>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair247>

<clonepair247>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair247>
<clonepair248>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair248>

<clonepair248>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair248>
<clonepair249>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair249>

<clonepair249>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair249>
<clonepair250>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair250>

<clonepair250>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair250>
<clonepair251>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair251>

<clonepair251>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair251>
<clonepair252>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair252>

<clonepair252>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair252>
<clonepair253>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair253>

<clonepair253>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair253>
<clonepair254>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair254>

<clonepair254>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair254>
<clonepair255>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair255>

<clonepair255>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair255>
<clonepair256>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair256>

<clonepair256>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair256>
<clonepair257>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair257>

<clonepair257>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair257>
<clonepair258>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair258>

<clonepair258>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair258>
<clonepair259>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair259>

<clonepair259>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair259>
<clonepair260>
<source file="systems/clearml-1.1.6/clearml/binding/args.py" startline="37" endline="48" pcid="12241"></source>
    def parse_args(self, args=None, namespace=None):
        if PatchArgumentParser._recursion_guard:
            return {} if not PatchArgumentParser._original_parse_args else \
                PatchArgumentParser._original_parse_args(self, args=args, namespace=namespace)

        PatchArgumentParser._recursion_guard = True
        try:
            result = PatchArgumentParser._patched_parse_args(
                PatchArgumentParser._original_parse_args, self, args=args, namespace=namespace)
        finally:
            PatchArgumentParser._recursion_guard = False
        return result
</clonepair260>

<clonepair260>
<source file="systems/clearml-1.1.6/clearml/binding/args.py" startline="50" endline="61" pcid="12242"></source>
    def parse_known_args(self, args=None, namespace=None):
        if PatchArgumentParser._recursion_guard:
            return {} if not PatchArgumentParser._original_parse_args else \
                PatchArgumentParser._original_parse_known_args(self, args=args, namespace=namespace)

        PatchArgumentParser._recursion_guard = True
        try:
            result = PatchArgumentParser._patched_parse_args(
                PatchArgumentParser._original_parse_known_args, self, args=args, namespace=namespace)
        finally:
            PatchArgumentParser._recursion_guard = False
</clonepair260>
<clonepair261>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="217" endline="234" pcid="3371"></source>
    def __init__(
        self,
        task,
        timestamp=None,
        iter=None,
        metric=None,
        variant=None,
        values=None,
        **kwargs
    ):
        super(MetricsVectorEvent, self).__init__(**kwargs)
        self.timestamp = timestamp
        self.task = task
        self.iter = iter
        self.metric = metric
        self.variant = variant
        self.values = values

</clonepair261>

<clonepair261>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair261>
<clonepair262>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair262>

<clonepair262>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair262>
<clonepair263>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair263>

<clonepair263>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair263>
<clonepair264>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair264>

<clonepair264>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair264>
<clonepair265>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair265>

<clonepair265>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair265>
<clonepair266>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair266>

<clonepair266>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair266>
<clonepair267>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair267>

<clonepair267>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair267>
<clonepair268>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="217" endline="234" pcid="3371"></source>
    def __init__(
        self,
        task,
        timestamp=None,
        iter=None,
        metric=None,
        variant=None,
        values=None,
        **kwargs
    ):
        super(MetricsVectorEvent, self).__init__(**kwargs)
        self.timestamp = timestamp
        self.task = task
        self.iter = iter
        self.metric = metric
        self.variant = variant
        self.values = values

</clonepair268>

<clonepair268>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair268>
<clonepair269>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="217" endline="234" pcid="3371"></source>
    def __init__(
        self,
        task,
        timestamp=None,
        iter=None,
        metric=None,
        variant=None,
        values=None,
        **kwargs
    ):
        super(MetricsVectorEvent, self).__init__(**kwargs)
        self.timestamp = timestamp
        self.task = task
        self.iter = iter
        self.metric = metric
        self.variant = variant
        self.values = values

</clonepair269>

<clonepair269>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair269>
<clonepair270>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair270>

<clonepair270>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair270>
<clonepair271>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair271>

<clonepair271>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair271>
<clonepair272>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair272>

<clonepair272>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair272>
<clonepair273>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair273>

<clonepair273>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair273>
<clonepair274>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair274>

<clonepair274>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair274>
<clonepair275>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair275>

<clonepair275>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair275>
<clonepair276>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair276>

<clonepair276>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair276>
<clonepair277>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair277>

<clonepair277>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair277>
<clonepair278>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair278>

<clonepair278>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair278>
<clonepair279>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair279>

<clonepair279>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair279>
<clonepair280>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair280>

<clonepair280>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair280>
<clonepair281>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair281>

<clonepair281>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair281>
<clonepair282>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair282>

<clonepair282>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair282>
<clonepair283>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair283>

<clonepair283>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair283>
<clonepair284>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair284>

<clonepair284>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair284>
<clonepair285>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair285>

<clonepair285>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair285>
<clonepair286>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair286>

<clonepair286>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair286>
<clonepair287>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair287>

<clonepair287>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair287>
<clonepair288>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair288>

<clonepair288>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair288>
<clonepair289>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair289>

<clonepair289>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair289>
<clonepair290>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair290>

<clonepair290>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="522" endline="537" pcid="8361"></source>
    def __init__(
            self, id=None, user=None, company=None, ip=None, register_time=None, last_activity_time=None, last_report_time=None, task=None, project=None, queue=None, queues=None, tags=None, **kwargs):
        super(Worker, self).__init__(**kwargs)
        self.id = id
        self.user = user
        self.company = company
        self.ip = ip
        self.register_time = register_time
        self.last_activity_time = last_activity_time
        self.last_report_time = last_report_time
        self.task = task
        self.project = project
        self.queue = queue
        self.queues = queues
        self.tags = tags

</clonepair290>
<clonepair291>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair291>

<clonepair291>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="2301" endline="2311" pcid="8487"></source>
    def __init__(
            self, worker, timestamp, task=None, queue=None, queues=None, machine_stats=None, tags=None, **kwargs):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair291>
<clonepair292>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair292>

<clonepair292>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="2301" endline="2311" pcid="8487"></source>
    def __init__(
            self, worker, timestamp, task=None, queue=None, queues=None, machine_stats=None, tags=None, **kwargs):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair292>
<clonepair293>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair293>

<clonepair293>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="2301" endline="2311" pcid="8487"></source>
    def __init__(
            self, worker, timestamp, task=None, queue=None, queues=None, machine_stats=None, tags=None, **kwargs):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair293>
<clonepair294>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair294>

<clonepair294>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="522" endline="537" pcid="8361"></source>
    def __init__(
            self, id=None, user=None, company=None, ip=None, register_time=None, last_activity_time=None, last_report_time=None, task=None, project=None, queue=None, queues=None, tags=None, **kwargs):
        super(Worker, self).__init__(**kwargs)
        self.id = id
        self.user = user
        self.company = company
        self.ip = ip
        self.register_time = register_time
        self.last_activity_time = last_activity_time
        self.last_report_time = last_report_time
        self.task = task
        self.project = project
        self.queue = queue
        self.queues = queues
        self.tags = tags

</clonepair294>
<clonepair295>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair295>

<clonepair295>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair295>
<clonepair296>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair296>

<clonepair296>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair296>
<clonepair297>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair297>

<clonepair297>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair297>
<clonepair298>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair298>

<clonepair298>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair298>
<clonepair299>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="2307" endline="2321" pcid="8685"></source>
    def __init__(
            self, task, new_task_name=None, new_task_comment=None, new_task_tags=None, new_task_system_tags=None, new_task_parent=None, new_task_project=None, new_task_hyperparams=None, new_task_configuration=None, execution_overrides=None, validate_references=None, **kwargs):
        super(CloneRequest, self).__init__(**kwargs)
        self.task = task
        self.new_task_name = new_task_name
        self.new_task_comment = new_task_comment
        self.new_task_tags = new_task_tags
        self.new_task_system_tags = new_task_system_tags
        self.new_task_parent = new_task_parent
        self.new_task_project = new_task_project
        self.new_task_hyperparams = new_task_hyperparams
        self.new_task_configuration = new_task_configuration
        self.execution_overrides = execution_overrides
        self.validate_references = validate_references

</clonepair299>

<clonepair299>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="8541" endline="8552" pcid="9090"></source>
    def __init__(
            self, task, name=None, tags=None, system_tags=None, comment=None, project=None, output__error=None, created=None, **kwargs):
        super(UpdateRequest, self).__init__(**kwargs)
        self.task = task
        self.name = name
        self.tags = tags
        self.system_tags = system_tags
        self.comment = comment
        self.project = project
        self.output__error = output__error
        self.created = created

</clonepair299>
<clonepair300>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair300>

<clonepair300>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair300>
<clonepair301>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair301>

<clonepair301>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair301>
<clonepair302>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair302>

<clonepair302>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair302>
<clonepair303>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair303>

<clonepair303>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair303>
<clonepair304>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair304>

<clonepair304>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair304>
<clonepair305>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair305>

<clonepair305>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair305>
<clonepair306>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair306>

<clonepair306>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair306>
<clonepair307>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair307>

<clonepair307>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair307>
<clonepair308>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair308>

<clonepair308>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair308>
<clonepair309>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair309>

<clonepair309>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair309>
<clonepair310>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair310>

<clonepair310>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair310>
<clonepair311>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair311>

<clonepair311>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair311>
<clonepair312>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair312>

<clonepair312>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair312>
<clonepair313>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair313>

<clonepair313>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair313>
<clonepair314>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="5461" endline="5476" pcid="2914"></source>
    def __init__(
        self,
        deleted=None,
        updated_children=None,
        updated_models=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(DeleteManyResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.updated_children = updated_children
        self.updated_models = updated_models
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair314>

<clonepair314>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair314>
<clonepair315>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair315>

<clonepair315>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair315>
<clonepair316>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair316>

<clonepair316>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair316>
<clonepair317>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="1198" endline="1213" pcid="2160"></source>
    def __init__(
        self,
        deleted=None,
        disassociated_tasks=None,
        urls=None,
        deleted_models=None,
        deleted_tasks=None,
        **kwargs
    ):
        super(DeleteResponse, self).__init__(**kwargs)
        self.deleted = deleted
        self.disassociated_tasks = disassociated_tasks
        self.urls = urls
        self.deleted_models = deleted_models
        self.deleted_tasks = deleted_tasks

</clonepair317>

<clonepair317>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair317>
<clonepair318>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair318>

<clonepair318>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair318>
<clonepair319>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair319>

<clonepair319>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair319>
<clonepair320>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair320>

<clonepair320>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair320>
<clonepair321>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair321>

<clonepair321>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair321>
<clonepair322>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair322>

<clonepair322>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair322>
<clonepair323>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair323>

<clonepair323>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair323>
<clonepair324>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair324>

<clonepair324>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair324>
<clonepair325>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair325>

<clonepair325>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair325>
<clonepair326>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="9958" endline="9973" pcid="3161"></source>
    def __init__(
        self,
        ids,
        status_reason=None,
        status_message=None,
        force=False,
        publish_model=None,
        **kwargs
    ):
        super(PublishManyRequest, self).__init__(**kwargs)
        self.ids = ids
        self.status_reason = status_reason
        self.status_message = status_message
        self.force = force
        self.publish_model = publish_model

</clonepair326>

<clonepair326>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair326>
<clonepair327>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair327>

<clonepair327>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair327>
<clonepair328>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair328>

<clonepair328>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair328>
<clonepair329>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair329>

<clonepair329>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair329>
<clonepair330>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair330>

<clonepair330>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair330>
<clonepair331>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair331>

<clonepair331>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair331>
<clonepair332>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair332>

<clonepair332>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair332>
<clonepair333>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair333>

<clonepair333>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair333>
<clonepair334>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair334>

<clonepair334>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair334>
<clonepair335>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair335>

<clonepair335>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="10712" endline="10725" pcid="3218"></source>
    def __init__(
        self,
        reset=None,
        dequeued=None,
        deleted_models=None,
        urls=None,
        **kwargs
    ):
        super(ResetManyResponse, self).__init__(**kwargs)
        self.reset = reset
        self.dequeued = dequeued
        self.deleted_models = deleted_models
        self.urls = urls

</clonepair335>
<clonepair336>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair336>

<clonepair336>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair336>
<clonepair337>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/projects.py" startline="2189" endline="2204" pcid="2223"></source>
    def __init__(
        self,
        section,
        name,
        projects=None,
        allow_public=None,
        include_subprojects=True,
        **kwargs
    ):
        super(GetHyperparamValuesRequest, self).__init__(**kwargs)
        self.projects = projects
        self.section = section
        self.name = name
        self.allow_public = allow_public
        self.include_subprojects = include_subprojects

</clonepair337>

<clonepair337>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/events.py" startline="1234" endline="1249" pcid="3444"></source>
    def __init__(
        self,
        metrics,
        iters=None,
        navigate_earlier=None,
        refresh=None,
        scroll_id=None,
        **kwargs
    ):
        super(DebugImagesRequest, self).__init__(**kwargs)
        self.metrics = metrics
        self.iters = iters
        self.navigate_earlier = navigate_earlier
        self.refresh = refresh
        self.scroll_id = scroll_id

</clonepair337>
<clonepair338>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="8541" endline="8552" pcid="9090"></source>
    def __init__(
            self, task, name=None, tags=None, system_tags=None, comment=None, project=None, output__error=None, created=None, **kwargs):
        super(UpdateRequest, self).__init__(**kwargs)
        self.task = task
        self.name = name
        self.tags = tags
        self.system_tags = system_tags
        self.comment = comment
        self.project = project
        self.output__error = output__error
        self.created = created

</clonepair338>

<clonepair338>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair338>
<clonepair339>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair339>

<clonepair339>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair339>
<clonepair340>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair340>

<clonepair340>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair340>
<clonepair341>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair341>

<clonepair341>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair341>
<clonepair342>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair342>

<clonepair342>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair342>
<clonepair343>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair343>

<clonepair343>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="2301" endline="2311" pcid="8487"></source>
    def __init__(
            self, worker, timestamp, task=None, queue=None, queues=None, machine_stats=None, tags=None, **kwargs):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair343>
<clonepair344>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair344>

<clonepair344>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="2301" endline="2311" pcid="8487"></source>
    def __init__(
            self, worker, timestamp, task=None, queue=None, queues=None, machine_stats=None, tags=None, **kwargs):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair344>
<clonepair345>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair345>

<clonepair345>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="2301" endline="2311" pcid="8487"></source>
    def __init__(
            self, worker, timestamp, task=None, queue=None, queues=None, machine_stats=None, tags=None, **kwargs):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair345>
<clonepair346>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair346>

<clonepair346>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="2301" endline="2311" pcid="8487"></source>
    def __init__(
            self, worker, timestamp, task=None, queue=None, queues=None, machine_stats=None, tags=None, **kwargs):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair346>
<clonepair347>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair347>

<clonepair347>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="2301" endline="2311" pcid="8487"></source>
    def __init__(
            self, worker, timestamp, task=None, queue=None, queues=None, machine_stats=None, tags=None, **kwargs):
        super(StatusReportRequest, self).__init__(**kwargs)
        self.worker = worker
        self.task = task
        self.queue = queue
        self.queues = queues
        self.timestamp = timestamp
        self.machine_stats = machine_stats
        self.tags = tags

</clonepair347>
<clonepair348>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair348>

<clonepair348>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair348>
<clonepair349>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair349>

<clonepair349>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair349>
<clonepair350>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair350>

<clonepair350>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair350>
<clonepair351>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair351>

<clonepair351>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair351>
<clonepair352>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair352>

<clonepair352>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair352>
<clonepair353>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair353>

<clonepair353>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair353>
<clonepair354>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair354>

<clonepair354>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair354>
<clonepair355>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/queues.py" startline="230" endline="241" pcid="7695"></source>
    def __init__(
            self, id=None, name=None, user=None, company=None, created=None, tags=None, system_tags=None, entries=None, **kwargs):
        super(Queue, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.entries = entries

</clonepair355>

<clonepair355>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair355>
<clonepair356>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair356>

<clonepair356>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair356>
<clonepair357>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair357>

<clonepair357>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair357>
<clonepair358>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair358>

<clonepair358>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair358>
<clonepair359>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair359>

<clonepair359>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair359>
<clonepair360>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair360>

<clonepair360>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair360>
<clonepair361>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/models.py" startline="2837" endline="2848" pcid="8103"></source>
    def __init__(
            self, task, uri=None, name=None, comment=None, tags=None, system_tags=None, override_model_id=None, iteration=None, **kwargs):
        super(UpdateForTaskRequest, self).__init__(**kwargs)
        self.task = task
        self.uri = uri
        self.name = name
        self.comment = comment
        self.tags = tags
        self.system_tags = system_tags
        self.override_model_id = override_model_id
        self.iteration = iteration

</clonepair361>

<clonepair361>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair361>
<clonepair362>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/queues.py" startline="230" endline="241" pcid="7695"></source>
    def __init__(
            self, id=None, name=None, user=None, company=None, created=None, tags=None, system_tags=None, entries=None, **kwargs):
        super(Queue, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.entries = entries

</clonepair362>

<clonepair362>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair362>
<clonepair363>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair363>

<clonepair363>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair363>
<clonepair364>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair364>

<clonepair364>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair364>
<clonepair365>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair365>

<clonepair365>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/projects.py" startline="510" endline="523" pcid="8165"></source>
    def __init__(
            self, id=None, name=None, description=None, user=None, company=None, created=None, tags=None, system_tags=None, default_output_destination=None, stats=None, **kwargs):
        super(ProjectsGetAllResponseSingle, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.description = description
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.default_output_destination = default_output_destination
        self.stats = stats

</clonepair365>
<clonepair366>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="983" endline="995" pcid="2593"></source>
    def artifacts(self, value):
        if value is None:
            self._property_artifacts = None
            return

        self.assert_isinstance(value, "artifacts", (list, tuple))
        if any(isinstance(v, dict) for v in value):
            value = [Artifact.from_dict(v) if isinstance(v, dict) else v for v in value]
        else:
            self.assert_isinstance(value, "artifacts", Artifact, is_array=True)
        self._property_artifacts = value


</clonepair366>

<clonepair366>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/workers.py" startline="1693" endline="1705" pcid="2457"></source>
    def workers(self, value):
        if value is None:
            self._property_workers = None
            return

        self.assert_isinstance(value, "workers", (list, tuple))
        if any(isinstance(v, dict) for v in value):
            value = [Worker.from_dict(v) if isinstance(v, dict) else v for v in value]
        else:
            self.assert_isinstance(value, "workers", Worker, is_array=True)
        self._property_workers = value


</clonepair366>
<clonepair367>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/queues.py" startline="230" endline="241" pcid="7695"></source>
    def __init__(
            self, id=None, name=None, user=None, company=None, created=None, tags=None, system_tags=None, entries=None, **kwargs):
        super(Queue, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.entries = entries

</clonepair367>

<clonepair367>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair367>
<clonepair368>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/queues.py" startline="230" endline="241" pcid="7695"></source>
    def __init__(
            self, id=None, name=None, user=None, company=None, created=None, tags=None, system_tags=None, entries=None, **kwargs):
        super(Queue, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.entries = entries

</clonepair368>

<clonepair368>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair368>
<clonepair369>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/queues.py" startline="230" endline="241" pcid="7695"></source>
    def __init__(
            self, id=None, name=None, user=None, company=None, created=None, tags=None, system_tags=None, entries=None, **kwargs):
        super(Queue, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.user = user
        self.company = company
        self.created = created
        self.tags = tags
        self.system_tags = system_tags
        self.entries = entries

</clonepair369>

<clonepair369>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair369>
<clonepair370>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair370>

<clonepair370>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair370>
<clonepair371>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="688" endline="699" pcid="8564"></source>
    def __init__(
            self, queue=None, parameters=None, model=None, model_desc=None, model_labels=None, framework=None, docker_cmd=None, artifacts=None, **kwargs):
        super(Execution, self).__init__(**kwargs)
        self.queue = queue
        self.parameters = parameters
        self.model = model
        self.model_desc = model_desc
        self.model_labels = model_labels
        self.framework = framework
        self.docker_cmd = docker_cmd
        self.artifacts = artifacts

</clonepair371>

<clonepair371>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/tasks.py" startline="7730" endline="7740" pcid="9021"></source>
    def __init__(
            self, deleted_indices=None, dequeued=None, frames=None, events=None, deleted_models=None, updated=None, fields=None, **kwargs):
        super(ResetResponse, self).__init__(**kwargs)
        self.deleted_indices = deleted_indices
        self.dequeued = dequeued
        self.frames = frames
        self.events = events
        self.deleted_models = deleted_models
        self.updated = updated
        self.fields = fields

</clonepair371>
<clonepair372>
<source file="systems/clearml-1.1.6/examples/reporting/html_reporting.py" startline="219" endline="244" pcid="13410"></source>
def main():
    # Connecting ClearML with the current process,
    # from here on everything is logged automatically
    task = Task.init(project_name="examples", task_name="html samples reporting")

    print('reporting html files into debug samples section')

    # Get the task logger,
    # You can also call Task.current_task().get_logger() from anywhere in your code.
    logger = task.get_logger()

    # report html as debug samples
    report_html_image(logger)
    report_html_graph(logger)
    report_html_groupby(logger)
    report_html_periodic_table(logger)
    report_html_url(logger)

    # force flush reports
    # If flush is not called, reports are flushed in the background every couple of seconds,
    # and at the end of the process execution
    logger.flush()

    print('We are done reporting, have a great day :)')


</clonepair372>

<clonepair372>
<source file="systems/clearml-1.1.6/examples/reporting/text_reporting.py" startline="60" endline="90" pcid="13415"></source>
def main():
    # Connecting ClearML with the current process,
    # from here on everything is logged automatically
    task = Task.init(project_name="examples", task_name="text reporting")

    print("reporting text logs")

    # report regular console print
    print("This is standard output test")

    # report stderr
    print("This is standard error test", file=sys.stderr)

    # Get the task logger,
    # You can also call Task.current_task().get_logger() from anywhere in your code.
    logger = task.get_logger()

    # report text based logs
    report_logs(logger)

    # report text as debug example
    report_debug_text(logger)

    # force flush reports
    # If flush is not called, reports are flushed in the background every couple of seconds,
    # and at the end of the process execution
    logger.flush()

    print("We are done reporting, have a great day :)")


</clonepair372>
<clonepair373>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_13/tasks.py" startline="983" endline="995" pcid="2593"></source>
    def artifacts(self, value):
        if value is None:
            self._property_artifacts = None
            return

        self.assert_isinstance(value, "artifacts", (list, tuple))
        if any(isinstance(v, dict) for v in value):
            value = [Artifact.from_dict(v) if isinstance(v, dict) else v for v in value]
        else:
            self.assert_isinstance(value, "artifacts", Artifact, is_array=True)
        self._property_artifacts = value


</clonepair373>

<clonepair373>
<source file="systems/clearml-1.1.6/clearml/backend_api/services/v2_9/workers.py" startline="1645" endline="1657" pcid="8455"></source>
    def workers(self, value):
        if value is None:
            self._property_workers = None
            return

        self.assert_isinstance(value, "workers", (list, tuple))
        if any(isinstance(v, dict) for v in value):
            value = [Worker.from_dict(v) if isinstance(v, dict) else v for v in value]
        else:
            self.assert_isinstance(value, "workers", Worker, is_array=True)
        self._property_workers = value


</clonepair373>
