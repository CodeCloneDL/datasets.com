<clones>
<systeminfo processor="nicad6" system="bup-0.32" granularity="functions-blind" threshold="30%" minlines="10" maxlines="2500"/>
<cloneinfo npcs="859" npairs="5"/>
<runinfo ncompares="21022" cputime="58116"/>
<classinfo nclasses="3"/>

<class classid="1" nclones="2" nlines="20" similarity="76">
<source file="systems/bup-0.32/test/int/test_metadata.py" startline="63" endline="83" pcid="747">
def test_clean_up_archive_path():
    cleanup = metadata._clean_up_path_for_archive
    WVPASSEQ(cleanup(b'foo'), b'foo')
    WVPASSEQ(cleanup(b'/foo'), b'foo')
    WVPASSEQ(cleanup(b'///foo'), b'foo')
    WVPASSEQ(cleanup(b'/foo/bar'), b'foo/bar')
    WVPASSEQ(cleanup(b'foo/./bar'), b'foo/bar')
    WVPASSEQ(cleanup(b'/foo/./bar'), b'foo/bar')
    WVPASSEQ(cleanup(b'/foo/./bar/././baz'), b'foo/bar/baz')
    WVPASSEQ(cleanup(b'/foo/./bar///././baz'), b'foo/bar/baz')
    WVPASSEQ(cleanup(b'//./foo/./bar///././baz/.///'), b'foo/bar/baz/')
    WVPASSEQ(cleanup(b'./foo/./.bar'), b'foo/.bar')
    WVPASSEQ(cleanup(b'./foo/.'), b'foo')
    WVPASSEQ(cleanup(b'./foo/..'), b'.')
    WVPASSEQ(cleanup(b'//./..//.../..//.'), b'.')
    WVPASSEQ(cleanup(b'//./..//..././/.'), b'...')
    WVPASSEQ(cleanup(b'/////.'), b'.')
    WVPASSEQ(cleanup(b'/../'), b'.')
    WVPASSEQ(cleanup(b''), b'.')


</source>
<source file="systems/bup-0.32/test/int/test_metadata.py" startline="103" endline="125" pcid="749">
def test_clean_up_extract_path():
    cleanup = metadata._clean_up_extract_path
    WVPASSEQ(cleanup(b'/foo'), b'foo')
    WVPASSEQ(cleanup(b'///foo'), b'foo')
    WVFAIL(cleanup(b'/../foo'))
    WVFAIL(cleanup(b'../foo'))
    WVFAIL(cleanup(b'foo/..'))
    WVFAIL(cleanup(b'foo/../'))
    WVFAIL(cleanup(b'foo/../bar'))
    WVPASSEQ(cleanup(b'foo'), b'foo')
    WVPASSEQ(cleanup(b'foo/'), b'foo/')
    WVPASSEQ(cleanup(b'foo///'), b'foo///')
    WVPASSEQ(cleanup(b'./foo'), b'./foo')
    WVPASSEQ(cleanup(b'foo/.'), b'foo/.')
    WVPASSEQ(cleanup(b'./foo/.'), b'./foo/.')
    WVPASSEQ(cleanup(b'foo/bar'), b'foo/bar')
    WVPASSEQ(cleanup(b'foo/./bar'), b'foo/./bar')
    WVPASSEQ(cleanup(b'/'), b'.')
    WVPASSEQ(cleanup(b'./'), b'./')
    WVPASSEQ(cleanup(b'///foo/bar'), b'foo/bar')
    WVPASSEQ(cleanup(b'///foo/bar'), b'foo/bar')


</source>
</class>

<class classid="2" nclones="2" nlines="20" similarity="73">
<source file="systems/bup-0.32/test/int/test_metadata.py" startline="84" endline="102" pcid="748">
def test_risky_path():
    risky = metadata._risky_path
    WVPASS(risky(b'/foo'))
    WVPASS(risky(b'///foo'))
    WVPASS(risky(b'/../foo'))
    WVPASS(risky(b'../foo'))
    WVPASS(risky(b'foo/..'))
    WVPASS(risky(b'foo/../'))
    WVPASS(risky(b'foo/../bar'))
    WVFAIL(risky(b'foo'))
    WVFAIL(risky(b'foo/'))
    WVFAIL(risky(b'foo///'))
    WVFAIL(risky(b'./foo'))
    WVFAIL(risky(b'foo/.'))
    WVFAIL(risky(b'./foo/.'))
    WVFAIL(risky(b'foo/bar'))
    WVFAIL(risky(b'foo/./bar'))


</source>
<source file="systems/bup-0.32/test/int/test_helpers.py" startline="209" endline="231" pcid="786">

def test_valid_save_name():
    valid = helpers.valid_save_name
    WVPASS(valid(b'x'))
    WVPASS(valid(b'x@'))
    WVFAIL(valid(b'@'))
    WVFAIL(valid(b'/'))
    WVFAIL(valid(b'/foo'))
    WVFAIL(valid(b'foo/'))
    WVFAIL(valid(b'/foo/'))
    WVFAIL(valid(b'foo//bar'))
    WVFAIL(valid(b'.'))
    WVFAIL(valid(b'bar.'))
    WVFAIL(valid(b'foo@{'))
    for x in b' ~^:?*[\\':
        WVFAIL(valid(b'foo' + bytes_from_byte(x)))
    for i in range(20):
        WVFAIL(valid(b'foo' + bytes_from_uint(i)))
    WVFAIL(valid(b'foo' + bytes_from_uint(0x7f)))
    WVFAIL(valid(b'foo..bar'))
    WVFAIL(valid(b'bar.lock/baz'))
    WVFAIL(valid(b'foo/bar.lock/baz'))
    WVFAIL(valid(b'.bar/baz'))
</source>
</class>

<class classid="3" nclones="3" nlines="14" similarity="78">
<source file="systems/bup-0.32/test/int/test_xstat.py" startline="60" endline="75" pcid="772">
def test_bup_utimensat(tmpdir):
    if not xstat._bup_utimensat:
        return
    path = tmpdir + b'/foo'
    open(path, 'w').close()
    frac_ts = (0, 10**9 // 2)
    xstat._bup_utimensat(_helpers.AT_FDCWD, path, (frac_ts, frac_ts), 0)
    st = _helpers.stat(path)
    atime_ts = st[8]
    mtime_ts = st[9]
    WVPASSEQ(atime_ts[0], 0)
    WVPASS(atime_ts[1] == 0 or atime_ts[1] == frac_ts[1])
    WVPASSEQ(mtime_ts[0], 0)
    WVPASS(mtime_ts[1] == 0 or mtime_ts[1] == frac_ts[1])


</source>
<source file="systems/bup-0.32/test/int/test_xstat.py" startline="92" endline="105" pcid="774">
def test_bup_lutimes(tmpdir):
    if not xstat._bup_lutimes:
        return
    path = tmpdir + b'/foo'
    open(path, 'w').close()
    frac_ts = (0, 10**6 // 2)
    xstat._bup_lutimes(path, (frac_ts, frac_ts))
    st = _helpers.stat(path)
    atime_ts = st[8]
    mtime_ts = st[9]
    WVPASSEQ(atime_ts[0], 0)
    WVPASS(atime_ts[1] == 0 or atime_ts[1] == frac_ts[1] * 1000)
    WVPASSEQ(mtime_ts[0], 0)
    WVPASS(mtime_ts[1] == 0 or mtime_ts[1] == frac_ts[1] * 1000)
</source>
<source file="systems/bup-0.32/test/int/test_xstat.py" startline="76" endline="91" pcid="773">
def test_bup_utimes(tmpdir):
    if not xstat._bup_utimes:
        return
    path = tmpdir + b'/foo'
    open(path, 'w').close()
    frac_ts = (0, 10**6 // 2)
    xstat._bup_utimes(path, (frac_ts, frac_ts))
    st = _helpers.stat(path)
    atime_ts = st[8]
    mtime_ts = st[9]
    WVPASSEQ(atime_ts[0], 0)
    WVPASS(atime_ts[1] == 0 or atime_ts[1] == frac_ts[1] * 1000)
    WVPASSEQ(mtime_ts[0], 0)
    WVPASS(mtime_ts[1] == 0 or mtime_ts[1] == frac_ts[1] * 1000)


</source>
</class>

</clones>
